# docker compose file for running a 3-node PostgreSQL cluster
# with 3-node etcd cluster as the DCS and one haproxy node
#
# requires a patroni image build from the Dockerfile:
# $ docker build -t patroni .
# The cluster could be started as:
# $ docker-compose up -d
# You can read more about it in the:
# https://github.com/patroni/patroni/blob/master/docker/README.md

networks:
    patroni:

services:
    etcd1: &etcd
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: [ patroni ]
        environment:
            ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
            ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
            ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
            ETCD_INITIAL_CLUSTER_STATE: new
            ETCD_INITIAL_CLUSTER_TOKEN: tutorial
            ETCD_UNSUPPORTED_ARCH: arm64
        container_name: etcd1
        hostname: etcd1
        command: etcd --name etcd1 --initial-advertise-peer-urls http://etcd1:2380
        profiles: [patroni]

    etcd2:
        <<: *etcd
        container_name: etcd2
        hostname: etcd2
        command: etcd --name etcd2 --initial-advertise-peer-urls http://etcd2:2380

    etcd3:
        <<: *etcd
        container_name: etcd3
        hostname: etcd3
        command: etcd --name etcd3 --initial-advertise-peer-urls http://etcd3:2380

    haproxy:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: [ patroni ]
        env_file: docker/patroni.env
        hostname: haproxy
        container_name: haproxy
        ports:
            - "6543:5000"
            - "6544:5001"
        command: haproxy
        profiles: [patroni]
        environment: &haproxy_env
            ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
            PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
            PATRONI_SCOPE: patroni
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -h localhost -p 5001"]
          interval: 30s
          timeout: 10s
          retries: 3
          start_period: 30s            

    patroni1:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: [ patroni ]
        env_file: docker/patroni.env
        hostname: patroni1
        container_name: patroni1
        profiles: [patroni]        
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni1

    patroni2:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: [ patroni ]
        env_file: docker/patroni.env
        hostname: patroni2
        container_name: patroni2
        profiles: [patroni]     
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni2

    patroni3:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: [ patroni ]
        env_file: docker/patroni.env
        hostname: patroni3
        container_name: patroni3
        profiles: [patroni]    
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni3
