name: highload
services:
  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5      
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
       - ./data:/var/lib/postgresql/data 
    ports:
      - 6543:5432
  api:
    build: 
      context: ./..
      dockerfile: ./src/Otus.Highload.Api/Dockerfile
    image: highload-api
    container_name: api
    environment:
      - ASPNETCORE_ENVIRONMENT="Development"
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Default=User ID=${PG_USERNAME};Password=${PG_PASSWORD};Host=${PG_HOST};Port=${PG_PORT};Database=${PG_USERNAME};Pooling=true;
    ports:
      - 5000:80
    depends_on:
      db:
        condition: service_healthy
      # users-loader:
        # condition: service_completed_successfully
  # users-loader:
    # image: bledig/alpine-psqlclient:3
    # container_name: users-loader
    # command: psql postgresql://${PG_USERNAME}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_USERNAME}  -a -f "/src/import_script.sql"
    # volumes:
       # - ./loader/import_users.sql:/src/import_script.sql 
       # - ./loader/users_202502091738.csv:/src/data.csv     
    # depends_on:
      # db:
        # condition: service_healthy        
  # faker-users-table:
    # build: 
      # context: ./../tools/postgresql_faker
      # dockerfile: Dockerfile  
    # image: postgres-faker
    # deploy:
      # mode: replicated
      # replicas: 10    
    # environment:  
      # TABLE: ${FAKER_USERS_TABLE}
      # INTERVAL: ${FAKER_INTERVAL}
      # LOOPS: ${FAKER_USERS_LOOPS}
      # ROWS_NUM: ${FAKER_USERS_ROWS_NUM}
      # LOCALE: ${FAKER_LOCALE}     
      # IS_PROD: ${FAKER_IS_PROD}
      # PG_HOST: ${PG_HOST}
      # PG_PORT: ${PG_PORT}
      # PG_USER: ${PG_USERNAME}
      # PG_DATABASE: ${PG_USERNAME}
      # PG_PASSWORD: ${PG_PASSWORD}
    # volumes:
       # - ./faker/users_metadata.json:/home/app/examples/metadata.json
    # depends_on:
      # db:
        # condition: service_healthy       
    