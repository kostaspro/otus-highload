/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 39318.0, "series": [{"data": [[0.0, 4568.0], [0.1, 4652.0], [0.2, 5867.0], [0.3, 5964.0], [0.4, 6206.0], [0.5, 6216.0], [0.6, 6224.0], [0.7, 6243.0], [0.8, 6257.0], [0.9, 6279.0], [1.0, 6297.0], [1.1, 6323.0], [1.2, 6354.0], [1.3, 6368.0], [1.4, 6387.0], [1.5, 6403.0], [1.6, 6417.0], [1.7, 6424.0], [1.8, 6442.0], [1.9, 6465.0], [2.0, 6495.0], [2.1, 6528.0], [2.2, 6542.0], [2.3, 6547.0], [2.4, 6562.0], [2.5, 6602.0], [2.6, 6638.0], [2.7, 6647.0], [2.8, 6656.0], [2.9, 6675.0], [3.0, 6698.0], [3.1, 6706.0], [3.2, 6716.0], [3.3, 6745.0], [3.4, 6758.0], [3.5, 6792.0], [3.6, 6803.0], [3.7, 6829.0], [3.8, 6858.0], [3.9, 6893.0], [4.0, 6915.0], [4.1, 6923.0], [4.2, 6929.0], [4.3, 6944.0], [4.4, 6970.0], [4.5, 6990.0], [4.6, 7013.0], [4.7, 7031.0], [4.8, 7042.0], [4.9, 7044.0], [5.0, 7047.0], [5.1, 7052.0], [5.2, 7055.0], [5.3, 7069.0], [5.4, 7091.0], [5.5, 7099.0], [5.6, 7105.0], [5.7, 7118.0], [5.8, 7124.0], [5.9, 7135.0], [6.0, 7151.0], [6.1, 7156.0], [6.2, 7166.0], [6.3, 7173.0], [6.4, 7176.0], [6.5, 7179.0], [6.6, 7180.0], [6.7, 7181.0], [6.8, 7188.0], [6.9, 7192.0], [7.0, 7193.0], [7.1, 7194.0], [7.2, 7196.0], [7.3, 7203.0], [7.4, 7217.0], [7.5, 7229.0], [7.6, 7238.0], [7.7, 7252.0], [7.8, 7270.0], [7.9, 7305.0], [8.0, 7316.0], [8.1, 7335.0], [8.2, 7346.0], [8.3, 7358.0], [8.4, 7367.0], [8.5, 7381.0], [8.6, 7390.0], [8.7, 7401.0], [8.8, 7418.0], [8.9, 7422.0], [9.0, 7432.0], [9.1, 7453.0], [9.2, 7466.0], [9.3, 7485.0], [9.4, 7495.0], [9.5, 7501.0], [9.6, 7511.0], [9.7, 7520.0], [9.8, 7535.0], [9.9, 7544.0], [10.0, 7550.0], [10.1, 7552.0], [10.2, 7554.0], [10.3, 7555.0], [10.4, 7556.0], [10.5, 7557.0], [10.6, 7558.0], [10.7, 7559.0], [10.8, 7561.0], [10.9, 7562.0], [11.0, 7565.0], [11.1, 7570.0], [11.2, 7576.0], [11.3, 7577.0], [11.4, 7580.0], [11.5, 7588.0], [11.6, 7592.0], [11.7, 7597.0], [11.8, 7607.0], [11.9, 7611.0], [12.0, 7617.0], [12.1, 7623.0], [12.2, 7639.0], [12.3, 7642.0], [12.4, 7652.0], [12.5, 7656.0], [12.6, 7665.0], [12.7, 7671.0], [12.8, 7675.0], [12.9, 7686.0], [13.0, 7691.0], [13.1, 7695.0], [13.2, 7702.0], [13.3, 7706.0], [13.4, 7719.0], [13.5, 7736.0], [13.6, 7756.0], [13.7, 7781.0], [13.8, 7795.0], [13.9, 7805.0], [14.0, 7812.0], [14.1, 7828.0], [14.2, 7847.0], [14.3, 7852.0], [14.4, 7856.0], [14.5, 7862.0], [14.6, 7867.0], [14.7, 7872.0], [14.8, 7876.0], [14.9, 7885.0], [15.0, 7896.0], [15.1, 7907.0], [15.2, 7910.0], [15.3, 7918.0], [15.4, 7935.0], [15.5, 7942.0], [15.6, 7950.0], [15.7, 7961.0], [15.8, 7976.0], [15.9, 7990.0], [16.0, 8005.0], [16.1, 8029.0], [16.2, 8063.0], [16.3, 8090.0], [16.4, 8097.0], [16.5, 8102.0], [16.6, 8104.0], [16.7, 8111.0], [16.8, 8116.0], [16.9, 8125.0], [17.0, 8164.0], [17.1, 8170.0], [17.2, 8180.0], [17.3, 8190.0], [17.4, 8201.0], [17.5, 8210.0], [17.6, 8214.0], [17.7, 8220.0], [17.8, 8226.0], [17.9, 8233.0], [18.0, 8243.0], [18.1, 8253.0], [18.2, 8269.0], [18.3, 8277.0], [18.4, 8296.0], [18.5, 8299.0], [18.6, 8310.0], [18.7, 8316.0], [18.8, 8319.0], [18.9, 8326.0], [19.0, 8338.0], [19.1, 8355.0], [19.2, 8375.0], [19.3, 8390.0], [19.4, 8407.0], [19.5, 8412.0], [19.6, 8418.0], [19.7, 8432.0], [19.8, 8438.0], [19.9, 8462.0], [20.0, 8472.0], [20.1, 8486.0], [20.2, 8489.0], [20.3, 8495.0], [20.4, 8500.0], [20.5, 8506.0], [20.6, 8516.0], [20.7, 8520.0], [20.8, 8535.0], [20.9, 8541.0], [21.0, 8562.0], [21.1, 8568.0], [21.2, 8574.0], [21.3, 8585.0], [21.4, 8589.0], [21.5, 8594.0], [21.6, 8598.0], [21.7, 8608.0], [21.8, 8613.0], [21.9, 8620.0], [22.0, 8627.0], [22.1, 8633.0], [22.2, 8649.0], [22.3, 8666.0], [22.4, 8669.0], [22.5, 8675.0], [22.6, 8683.0], [22.7, 8689.0], [22.8, 8691.0], [22.9, 8697.0], [23.0, 8697.0], [23.1, 8699.0], [23.2, 8701.0], [23.3, 8709.0], [23.4, 8718.0], [23.5, 8723.0], [23.6, 8727.0], [23.7, 8730.0], [23.8, 8742.0], [23.9, 8749.0], [24.0, 8750.0], [24.1, 8759.0], [24.2, 8778.0], [24.3, 8799.0], [24.4, 8816.0], [24.5, 8871.0], [24.6, 8903.0], [24.7, 8932.0], [24.8, 8966.0], [24.9, 8976.0], [25.0, 8987.0], [25.1, 8995.0], [25.2, 9010.0], [25.3, 9020.0], [25.4, 9023.0], [25.5, 9027.0], [25.6, 9038.0], [25.7, 9047.0], [25.8, 9052.0], [25.9, 9055.0], [26.0, 9058.0], [26.1, 9059.0], [26.2, 9064.0], [26.3, 9066.0], [26.4, 9071.0], [26.5, 9078.0], [26.6, 9082.0], [26.7, 9095.0], [26.8, 9102.0], [26.9, 9107.0], [27.0, 9112.0], [27.1, 9115.0], [27.2, 9121.0], [27.3, 9128.0], [27.4, 9131.0], [27.5, 9134.0], [27.6, 9141.0], [27.7, 9146.0], [27.8, 9150.0], [27.9, 9150.0], [28.0, 9152.0], [28.1, 9155.0], [28.2, 9159.0], [28.3, 9162.0], [28.4, 9165.0], [28.5, 9169.0], [28.6, 9170.0], [28.7, 9174.0], [28.8, 9176.0], [28.9, 9180.0], [29.0, 9183.0], [29.1, 9185.0], [29.2, 9188.0], [29.3, 9190.0], [29.4, 9195.0], [29.5, 9196.0], [29.6, 9202.0], [29.7, 9204.0], [29.8, 9206.0], [29.9, 9208.0], [30.0, 9210.0], [30.1, 9212.0], [30.2, 9214.0], [30.3, 9215.0], [30.4, 9216.0], [30.5, 9220.0], [30.6, 9228.0], [30.7, 9231.0], [30.8, 9239.0], [30.9, 9249.0], [31.0, 9355.0], [31.1, 9625.0], [31.2, 9668.0], [31.3, 9690.0], [31.4, 9725.0], [31.5, 9752.0], [31.6, 9763.0], [31.7, 9777.0], [31.8, 9804.0], [31.9, 9814.0], [32.0, 9820.0], [32.1, 9828.0], [32.2, 9838.0], [32.3, 9847.0], [32.4, 9862.0], [32.5, 9872.0], [32.6, 9884.0], [32.7, 9886.0], [32.8, 9894.0], [32.9, 9900.0], [33.0, 9906.0], [33.1, 9913.0], [33.2, 9917.0], [33.3, 9922.0], [33.4, 9928.0], [33.5, 9931.0], [33.6, 9935.0], [33.7, 9939.0], [33.8, 9949.0], [33.9, 9959.0], [34.0, 9963.0], [34.1, 9965.0], [34.2, 9969.0], [34.3, 9974.0], [34.4, 9986.0], [34.5, 10001.0], [34.6, 10125.0], [34.7, 10150.0], [34.8, 10458.0], [34.9, 10473.0], [35.0, 10510.0], [35.1, 10560.0], [35.2, 10613.0], [35.3, 10639.0], [35.4, 10979.0], [35.5, 11073.0], [35.6, 11079.0], [35.7, 11094.0], [35.8, 11102.0], [35.9, 11107.0], [36.0, 11126.0], [36.1, 11134.0], [36.2, 11137.0], [36.3, 11139.0], [36.4, 11144.0], [36.5, 11149.0], [36.6, 11167.0], [36.7, 11177.0], [36.8, 11188.0], [36.9, 11278.0], [37.0, 11313.0], [37.1, 11377.0], [37.2, 11411.0], [37.3, 11432.0], [37.4, 11448.0], [37.5, 11541.0], [37.6, 11566.0], [37.7, 11596.0], [37.8, 11604.0], [37.9, 11678.0], [38.0, 11767.0], [38.1, 11816.0], [38.2, 11880.0], [38.3, 11941.0], [38.4, 11953.0], [38.5, 11976.0], [38.6, 11984.0], [38.7, 11989.0], [38.8, 11998.0], [38.9, 12020.0], [39.0, 12044.0], [39.1, 12077.0], [39.2, 12113.0], [39.3, 12139.0], [39.4, 12165.0], [39.5, 12175.0], [39.6, 12189.0], [39.7, 12206.0], [39.8, 12224.0], [39.9, 12236.0], [40.0, 12261.0], [40.1, 12285.0], [40.2, 12318.0], [40.3, 12348.0], [40.4, 12405.0], [40.5, 12430.0], [40.6, 12455.0], [40.7, 12508.0], [40.8, 12524.0], [40.9, 12557.0], [41.0, 12582.0], [41.1, 12600.0], [41.2, 12605.0], [41.3, 12642.0], [41.4, 12671.0], [41.5, 12706.0], [41.6, 12736.0], [41.7, 12750.0], [41.8, 12764.0], [41.9, 12778.0], [42.0, 12786.0], [42.1, 12792.0], [42.2, 12800.0], [42.3, 12805.0], [42.4, 12808.0], [42.5, 12813.0], [42.6, 12815.0], [42.7, 12818.0], [42.8, 12825.0], [42.9, 12831.0], [43.0, 12834.0], [43.1, 12838.0], [43.2, 12841.0], [43.3, 12846.0], [43.4, 12849.0], [43.5, 12851.0], [43.6, 12857.0], [43.7, 12874.0], [43.8, 12882.0], [43.9, 12896.0], [44.0, 12902.0], [44.1, 12910.0], [44.2, 12917.0], [44.3, 12926.0], [44.4, 12937.0], [44.5, 12975.0], [44.6, 13016.0], [44.7, 13033.0], [44.8, 13052.0], [44.9, 13076.0], [45.0, 13110.0], [45.1, 13139.0], [45.2, 13181.0], [45.3, 13208.0], [45.4, 13228.0], [45.5, 13293.0], [45.6, 13325.0], [45.7, 13345.0], [45.8, 13369.0], [45.9, 13383.0], [46.0, 13388.0], [46.1, 13394.0], [46.2, 13402.0], [46.3, 13405.0], [46.4, 13408.0], [46.5, 13412.0], [46.6, 13421.0], [46.7, 13431.0], [46.8, 13433.0], [46.9, 13446.0], [47.0, 13453.0], [47.1, 13459.0], [47.2, 13462.0], [47.3, 13470.0], [47.4, 13487.0], [47.5, 13497.0], [47.6, 13504.0], [47.7, 13515.0], [47.8, 13526.0], [47.9, 13544.0], [48.0, 13558.0], [48.1, 13572.0], [48.2, 13579.0], [48.3, 13584.0], [48.4, 13588.0], [48.5, 13590.0], [48.6, 13593.0], [48.7, 13596.0], [48.8, 13602.0], [48.9, 13605.0], [49.0, 13614.0], [49.1, 13619.0], [49.2, 13623.0], [49.3, 13628.0], [49.4, 13634.0], [49.5, 13640.0], [49.6, 13648.0], [49.7, 13655.0], [49.8, 13657.0], [49.9, 13671.0], [50.0, 13675.0], [50.1, 13681.0], [50.2, 13695.0], [50.3, 13697.0], [50.4, 13706.0], [50.5, 13716.0], [50.6, 13731.0], [50.7, 13748.0], [50.8, 13762.0], [50.9, 13780.0], [51.0, 13788.0], [51.1, 13813.0], [51.2, 13818.0], [51.3, 13821.0], [51.4, 13829.0], [51.5, 13842.0], [51.6, 13857.0], [51.7, 13865.0], [51.8, 13885.0], [51.9, 13894.0], [52.0, 13905.0], [52.1, 13923.0], [52.2, 13940.0], [52.3, 13948.0], [52.4, 13955.0], [52.5, 13974.0], [52.6, 13984.0], [52.7, 13997.0], [52.8, 14003.0], [52.9, 14020.0], [53.0, 14036.0], [53.1, 14050.0], [53.2, 14087.0], [53.3, 14126.0], [53.4, 14205.0], [53.5, 14214.0], [53.6, 14219.0], [53.7, 14223.0], [53.8, 14232.0], [53.9, 14251.0], [54.0, 14257.0], [54.1, 14260.0], [54.2, 14264.0], [54.3, 14266.0], [54.4, 14268.0], [54.5, 14270.0], [54.6, 14273.0], [54.7, 14281.0], [54.8, 14291.0], [54.9, 14293.0], [55.0, 14296.0], [55.1, 14301.0], [55.2, 14304.0], [55.3, 14314.0], [55.4, 14326.0], [55.5, 14329.0], [55.6, 14333.0], [55.7, 14355.0], [55.8, 14359.0], [55.9, 14364.0], [56.0, 14374.0], [56.1, 14380.0], [56.2, 14390.0], [56.3, 14397.0], [56.4, 14406.0], [56.5, 14411.0], [56.6, 14418.0], [56.7, 14435.0], [56.8, 14442.0], [56.9, 14458.0], [57.0, 14469.0], [57.1, 14479.0], [57.2, 14489.0], [57.3, 14510.0], [57.4, 14531.0], [57.5, 14535.0], [57.6, 14561.0], [57.7, 14573.0], [57.8, 14581.0], [57.9, 14589.0], [58.0, 14594.0], [58.1, 14614.0], [58.2, 14632.0], [58.3, 14639.0], [58.4, 14649.0], [58.5, 14677.0], [58.6, 14688.0], [58.7, 14705.0], [58.8, 14715.0], [58.9, 14730.0], [59.0, 14742.0], [59.1, 14748.0], [59.2, 14763.0], [59.3, 14771.0], [59.4, 14780.0], [59.5, 14794.0], [59.6, 14804.0], [59.7, 14814.0], [59.8, 14826.0], [59.9, 14850.0], [60.0, 14881.0], [60.1, 14906.0], [60.2, 14924.0], [60.3, 33337.0], [60.4, 33348.0], [60.5, 34101.0], [60.6, 34162.0], [60.7, 34171.0], [60.8, 34185.0], [60.9, 34197.0], [61.0, 34207.0], [61.1, 34215.0], [61.2, 34218.0], [61.3, 34226.0], [61.4, 34249.0], [61.5, 34256.0], [61.6, 34268.0], [61.7, 34306.0], [61.8, 34351.0], [61.9, 34368.0], [62.0, 34379.0], [62.1, 34392.0], [62.2, 34399.0], [62.3, 34410.0], [62.4, 34414.0], [62.5, 34419.0], [62.6, 34429.0], [62.7, 34441.0], [62.8, 34449.0], [62.9, 34454.0], [63.0, 34459.0], [63.1, 34466.0], [63.2, 34474.0], [63.3, 34477.0], [63.4, 34481.0], [63.5, 34483.0], [63.6, 34492.0], [63.7, 34494.0], [63.8, 34500.0], [63.9, 34512.0], [64.0, 34517.0], [64.1, 34525.0], [64.2, 34533.0], [64.3, 34540.0], [64.4, 34559.0], [64.5, 35616.0], [64.6, 35641.0], [64.7, 35648.0], [64.8, 35658.0], [64.9, 35664.0], [65.0, 35680.0], [65.1, 35690.0], [65.2, 35700.0], [65.3, 35720.0], [65.4, 35741.0], [65.5, 35765.0], [65.6, 35772.0], [65.7, 35779.0], [65.8, 35787.0], [65.9, 35795.0], [66.0, 35802.0], [66.1, 35814.0], [66.2, 35823.0], [66.3, 35833.0], [66.4, 35882.0], [66.5, 35889.0], [66.6, 35893.0], [66.7, 35902.0], [66.8, 35907.0], [66.9, 35915.0], [67.0, 35924.0], [67.1, 35927.0], [67.2, 35932.0], [67.3, 35937.0], [67.4, 35942.0], [67.5, 35945.0], [67.6, 35949.0], [67.7, 35953.0], [67.8, 35958.0], [67.9, 35960.0], [68.0, 35966.0], [68.1, 35974.0], [68.2, 35976.0], [68.3, 35981.0], [68.4, 35991.0], [68.5, 36003.0], [68.6, 36008.0], [68.7, 36010.0], [68.8, 36019.0], [68.9, 36024.0], [69.0, 36029.0], [69.1, 36032.0], [69.2, 36040.0], [69.3, 36043.0], [69.4, 36046.0], [69.5, 36049.0], [69.6, 36056.0], [69.7, 36059.0], [69.8, 36063.0], [69.9, 36065.0], [70.0, 36068.0], [70.1, 36070.0], [70.2, 36072.0], [70.3, 36074.0], [70.4, 36076.0], [70.5, 36079.0], [70.6, 36085.0], [70.7, 36141.0], [70.8, 36379.0], [70.9, 36435.0], [71.0, 36458.0], [71.1, 36534.0], [71.2, 36558.0], [71.3, 36584.0], [71.4, 36601.0], [71.5, 36614.0], [71.6, 36621.0], [71.7, 36630.0], [71.8, 36634.0], [71.9, 36644.0], [72.0, 36652.0], [72.1, 36657.0], [72.2, 36665.0], [72.3, 36673.0], [72.4, 36679.0], [72.5, 36689.0], [72.6, 36699.0], [72.7, 36701.0], [72.8, 36703.0], [72.9, 36706.0], [73.0, 36712.0], [73.1, 36717.0], [73.2, 36730.0], [73.3, 36743.0], [73.4, 36753.0], [73.5, 36756.0], [73.6, 36766.0], [73.7, 36775.0], [73.8, 36787.0], [73.9, 36796.0], [74.0, 36805.0], [74.1, 36808.0], [74.2, 36811.0], [74.3, 36818.0], [74.4, 36825.0], [74.5, 36828.0], [74.6, 36831.0], [74.7, 36834.0], [74.8, 36842.0], [74.9, 36845.0], [75.0, 36852.0], [75.1, 36859.0], [75.2, 36863.0], [75.3, 36867.0], [75.4, 36868.0], [75.5, 36869.0], [75.6, 36875.0], [75.7, 36880.0], [75.8, 36888.0], [75.9, 36895.0], [76.0, 36899.0], [76.1, 36901.0], [76.2, 36904.0], [76.3, 36906.0], [76.4, 36908.0], [76.5, 36910.0], [76.6, 36912.0], [76.7, 36915.0], [76.8, 36918.0], [76.9, 36924.0], [77.0, 36931.0], [77.1, 36943.0], [77.2, 36947.0], [77.3, 36960.0], [77.4, 36970.0], [77.5, 36978.0], [77.6, 36985.0], [77.7, 36998.0], [77.8, 37006.0], [77.9, 37015.0], [78.0, 37025.0], [78.1, 37035.0], [78.2, 37043.0], [78.3, 37048.0], [78.4, 37056.0], [78.5, 37066.0], [78.6, 37086.0], [78.7, 37122.0], [78.8, 37140.0], [78.9, 37157.0], [79.0, 37169.0], [79.1, 37179.0], [79.2, 37185.0], [79.3, 37195.0], [79.4, 37202.0], [79.5, 37206.0], [79.6, 37215.0], [79.7, 37225.0], [79.8, 37231.0], [79.9, 37241.0], [80.0, 37251.0], [80.1, 37257.0], [80.2, 37261.0], [80.3, 37265.0], [80.4, 37270.0], [80.5, 37275.0], [80.6, 37280.0], [80.7, 37283.0], [80.8, 37294.0], [80.9, 37302.0], [81.0, 37306.0], [81.1, 37308.0], [81.2, 37315.0], [81.3, 37328.0], [81.4, 37332.0], [81.5, 37339.0], [81.6, 37347.0], [81.7, 37354.0], [81.8, 37357.0], [81.9, 37364.0], [82.0, 37369.0], [82.1, 37380.0], [82.2, 37386.0], [82.3, 37391.0], [82.4, 37402.0], [82.5, 37408.0], [82.6, 37417.0], [82.7, 37432.0], [82.8, 37438.0], [82.9, 37446.0], [83.0, 37456.0], [83.1, 37467.0], [83.2, 37475.0], [83.3, 37493.0], [83.4, 37516.0], [83.5, 37549.0], [83.6, 37558.0], [83.7, 37570.0], [83.8, 37582.0], [83.9, 37591.0], [84.0, 37594.0], [84.1, 37607.0], [84.2, 37616.0], [84.3, 37620.0], [84.4, 37626.0], [84.5, 37632.0], [84.6, 37638.0], [84.7, 37641.0], [84.8, 37648.0], [84.9, 37655.0], [85.0, 37660.0], [85.1, 37666.0], [85.2, 37675.0], [85.3, 37684.0], [85.4, 37690.0], [85.5, 37702.0], [85.6, 37710.0], [85.7, 37721.0], [85.8, 37738.0], [85.9, 37755.0], [86.0, 37765.0], [86.1, 37769.0], [86.2, 37776.0], [86.3, 37789.0], [86.4, 37799.0], [86.5, 37816.0], [86.6, 37829.0], [86.7, 37857.0], [86.8, 37864.0], [86.9, 37877.0], [87.0, 37884.0], [87.1, 37908.0], [87.2, 37927.0], [87.3, 37952.0], [87.4, 37967.0], [87.5, 37979.0], [87.6, 37988.0], [87.7, 38002.0], [87.8, 38017.0], [87.9, 38026.0], [88.0, 38041.0], [88.1, 38056.0], [88.2, 38069.0], [88.3, 38073.0], [88.4, 38077.0], [88.5, 38081.0], [88.6, 38091.0], [88.7, 38101.0], [88.8, 38111.0], [88.9, 38119.0], [89.0, 38133.0], [89.1, 38141.0], [89.2, 38157.0], [89.3, 38186.0], [89.4, 38191.0], [89.5, 38196.0], [89.6, 38218.0], [89.7, 38232.0], [89.8, 38260.0], [89.9, 38270.0], [90.0, 38275.0], [90.1, 38279.0], [90.2, 38289.0], [90.3, 38296.0], [90.4, 38305.0], [90.5, 38309.0], [90.6, 38316.0], [90.7, 38328.0], [90.8, 38359.0], [90.9, 38379.0], [91.0, 38386.0], [91.1, 38401.0], [91.2, 38405.0], [91.3, 38415.0], [91.4, 38420.0], [91.5, 38426.0], [91.6, 38433.0], [91.7, 38439.0], [91.8, 38442.0], [91.9, 38451.0], [92.0, 38454.0], [92.1, 38464.0], [92.2, 38475.0], [92.3, 38498.0], [92.4, 38514.0], [92.5, 38523.0], [92.6, 38526.0], [92.7, 38531.0], [92.8, 38537.0], [92.9, 38545.0], [93.0, 38564.0], [93.1, 38569.0], [93.2, 38578.0], [93.3, 38585.0], [93.4, 38590.0], [93.5, 38597.0], [93.6, 38604.0], [93.7, 38611.0], [93.8, 38618.0], [93.9, 38624.0], [94.0, 38628.0], [94.1, 38633.0], [94.2, 38649.0], [94.3, 38654.0], [94.4, 38660.0], [94.5, 38669.0], [94.6, 38684.0], [94.7, 38690.0], [94.8, 38697.0], [94.9, 38707.0], [95.0, 38716.0], [95.1, 38720.0], [95.2, 38725.0], [95.3, 38738.0], [95.4, 38770.0], [95.5, 38827.0], [95.6, 38834.0], [95.7, 38853.0], [95.8, 38860.0], [95.9, 38873.0], [96.0, 38882.0], [96.1, 38890.0], [96.2, 38900.0], [96.3, 38906.0], [96.4, 38914.0], [96.5, 38917.0], [96.6, 38922.0], [96.7, 38924.0], [96.8, 38928.0], [96.9, 38930.0], [97.0, 38931.0], [97.1, 38933.0], [97.2, 38933.0], [97.3, 38935.0], [97.4, 38937.0], [97.5, 38946.0], [97.6, 38952.0], [97.7, 38960.0], [97.8, 38963.0], [97.9, 38964.0], [98.0, 38965.0], [98.1, 38967.0], [98.2, 38976.0], [98.3, 38981.0], [98.4, 39001.0], [98.5, 39036.0], [98.6, 39150.0], [98.7, 39183.0], [98.8, 39195.0], [98.9, 39217.0], [99.0, 39222.0], [99.1, 39232.0], [99.2, 39238.0], [99.3, 39246.0], [99.4, 39262.0], [99.5, 39267.0], [99.6, 39273.0], [99.7, 39279.0], [99.8, 39293.0], [99.9, 39304.0], [100.0, 39318.0]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 3.0], [0.3, 4.0], [0.4, 4.0], [0.5, 5.0], [0.6, 6.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 9.0], [1.1, 10.0], [1.2, 11.0], [1.3, 12.0], [1.4, 13.0], [1.5, 14.0], [1.6, 15.0], [1.7, 15.0], [1.8, 16.0], [1.9, 17.0], [2.0, 19.0], [2.1, 20.0], [2.2, 21.0], [2.3, 22.0], [2.4, 23.0], [2.5, 24.0], [2.6, 26.0], [2.7, 27.0], [2.8, 28.0], [2.9, 29.0], [3.0, 30.0], [3.1, 30.0], [3.2, 31.0], [3.3, 32.0], [3.4, 33.0], [3.5, 34.0], [3.6, 36.0], [3.7, 36.0], [3.8, 37.0], [3.9, 38.0], [4.0, 39.0], [4.1, 40.0], [4.2, 40.0], [4.3, 41.0], [4.4, 41.0], [4.5, 42.0], [4.6, 43.0], [4.7, 45.0], [4.8, 49.0], [4.9, 52.0], [5.0, 53.0], [5.1, 55.0], [5.2, 56.0], [5.3, 56.0], [5.4, 60.0], [5.5, 63.0], [5.6, 64.0], [5.7, 65.0], [5.8, 66.0], [5.9, 67.0], [6.0, 68.0], [6.1, 69.0], [6.2, 71.0], [6.3, 71.0], [6.4, 74.0], [6.5, 75.0], [6.6, 76.0], [6.7, 78.0], [6.8, 79.0], [6.9, 81.0], [7.0, 82.0], [7.1, 85.0], [7.2, 85.0], [7.3, 89.0], [7.4, 91.0], [7.5, 94.0], [7.6, 94.0], [7.7, 95.0], [7.8, 97.0], [7.9, 97.0], [8.0, 99.0], [8.1, 100.0], [8.2, 102.0], [8.3, 103.0], [8.4, 104.0], [8.5, 105.0], [8.6, 106.0], [8.7, 107.0], [8.8, 109.0], [8.9, 117.0], [9.0, 128.0], [9.1, 135.0], [9.2, 148.0], [9.3, 151.0], [9.4, 155.0], [9.5, 157.0], [9.6, 161.0], [9.7, 165.0], [9.8, 167.0], [9.9, 167.0], [10.0, 169.0], [10.1, 170.0], [10.2, 174.0], [10.3, 177.0], [10.4, 180.0], [10.5, 181.0], [10.6, 181.0], [10.7, 182.0], [10.8, 183.0], [10.9, 188.0], [11.0, 193.0], [11.1, 199.0], [11.2, 204.0], [11.3, 206.0], [11.4, 207.0], [11.5, 207.0], [11.6, 209.0], [11.7, 211.0], [11.8, 213.0], [11.9, 215.0], [12.0, 216.0], [12.1, 217.0], [12.2, 217.0], [12.3, 217.0], [12.4, 217.0], [12.5, 218.0], [12.6, 219.0], [12.7, 220.0], [12.8, 220.0], [12.9, 220.0], [13.0, 220.0], [13.1, 221.0], [13.2, 221.0], [13.3, 222.0], [13.4, 222.0], [13.5, 225.0], [13.6, 228.0], [13.7, 231.0], [13.8, 231.0], [13.9, 233.0], [14.0, 234.0], [14.1, 234.0], [14.2, 235.0], [14.3, 235.0], [14.4, 237.0], [14.5, 240.0], [14.6, 243.0], [14.7, 244.0], [14.8, 245.0], [14.9, 246.0], [15.0, 246.0], [15.1, 248.0], [15.2, 249.0], [15.3, 250.0], [15.4, 251.0], [15.5, 254.0], [15.6, 256.0], [15.7, 261.0], [15.8, 265.0], [15.9, 267.0], [16.0, 267.0], [16.1, 269.0], [16.2, 270.0], [16.3, 271.0], [16.4, 273.0], [16.5, 275.0], [16.6, 275.0], [16.7, 276.0], [16.8, 278.0], [16.9, 278.0], [17.0, 280.0], [17.1, 282.0], [17.2, 284.0], [17.3, 285.0], [17.4, 286.0], [17.5, 287.0], [17.6, 289.0], [17.7, 290.0], [17.8, 291.0], [17.9, 295.0], [18.0, 295.0], [18.1, 296.0], [18.2, 299.0], [18.3, 301.0], [18.4, 304.0], [18.5, 306.0], [18.6, 308.0], [18.7, 308.0], [18.8, 311.0], [18.9, 312.0], [19.0, 314.0], [19.1, 315.0], [19.2, 316.0], [19.3, 317.0], [19.4, 318.0], [19.5, 321.0], [19.6, 325.0], [19.7, 327.0], [19.8, 328.0], [19.9, 329.0], [20.0, 330.0], [20.1, 332.0], [20.2, 334.0], [20.3, 336.0], [20.4, 338.0], [20.5, 339.0], [20.6, 340.0], [20.7, 341.0], [20.8, 344.0], [20.9, 347.0], [21.0, 349.0], [21.1, 350.0], [21.2, 352.0], [21.3, 356.0], [21.4, 358.0], [21.5, 361.0], [21.6, 365.0], [21.7, 373.0], [21.8, 375.0], [21.9, 381.0], [22.0, 383.0], [22.1, 385.0], [22.2, 387.0], [22.3, 387.0], [22.4, 389.0], [22.5, 393.0], [22.6, 395.0], [22.7, 400.0], [22.8, 402.0], [22.9, 404.0], [23.0, 406.0], [23.1, 408.0], [23.2, 412.0], [23.3, 416.0], [23.4, 422.0], [23.5, 426.0], [23.6, 433.0], [23.7, 436.0], [23.8, 441.0], [23.9, 444.0], [24.0, 450.0], [24.1, 454.0], [24.2, 457.0], [24.3, 463.0], [24.4, 475.0], [24.5, 486.0], [24.6, 505.0], [24.7, 506.0], [24.8, 509.0], [24.9, 509.0], [25.0, 510.0], [25.1, 510.0], [25.2, 511.0], [25.3, 511.0], [25.4, 511.0], [25.5, 512.0], [25.6, 512.0], [25.7, 512.0], [25.8, 513.0], [25.9, 513.0], [26.0, 513.0], [26.1, 513.0], [26.2, 514.0], [26.3, 514.0], [26.4, 514.0], [26.5, 515.0], [26.6, 515.0], [26.7, 516.0], [26.8, 516.0], [26.9, 516.0], [27.0, 516.0], [27.1, 517.0], [27.2, 517.0], [27.3, 517.0], [27.4, 517.0], [27.5, 518.0], [27.6, 518.0], [27.7, 518.0], [27.8, 519.0], [27.9, 519.0], [28.0, 519.0], [28.1, 520.0], [28.2, 520.0], [28.3, 523.0], [28.4, 523.0], [28.5, 539.0], [28.6, 574.0], [28.7, 575.0], [28.8, 575.0], [28.9, 576.0], [29.0, 577.0], [29.1, 578.0], [29.2, 586.0], [29.3, 588.0], [29.4, 589.0], [29.5, 590.0], [29.6, 592.0], [29.7, 593.0], [29.8, 601.0], [29.9, 602.0], [30.0, 604.0], [30.1, 605.0], [30.2, 606.0], [30.3, 607.0], [30.4, 608.0], [30.5, 609.0], [30.6, 612.0], [30.7, 612.0], [30.8, 614.0], [30.9, 614.0], [31.0, 615.0], [31.1, 617.0], [31.2, 618.0], [31.3, 621.0], [31.4, 630.0], [31.5, 631.0], [31.6, 635.0], [31.7, 641.0], [31.8, 648.0], [31.9, 650.0], [32.0, 651.0], [32.1, 651.0], [32.2, 652.0], [32.3, 653.0], [32.4, 654.0], [32.5, 655.0], [32.6, 657.0], [32.7, 659.0], [32.8, 662.0], [32.9, 663.0], [33.0, 663.0], [33.1, 665.0], [33.2, 666.0], [33.3, 667.0], [33.4, 668.0], [33.5, 669.0], [33.6, 672.0], [33.7, 675.0], [33.8, 676.0], [33.9, 677.0], [34.0, 678.0], [34.1, 679.0], [34.2, 681.0], [34.3, 682.0], [34.4, 684.0], [34.5, 685.0], [34.6, 686.0], [34.7, 687.0], [34.8, 687.0], [34.9, 688.0], [35.0, 689.0], [35.1, 690.0], [35.2, 691.0], [35.3, 691.0], [35.4, 692.0], [35.5, 693.0], [35.6, 693.0], [35.7, 694.0], [35.8, 695.0], [35.9, 695.0], [36.0, 695.0], [36.1, 696.0], [36.2, 697.0], [36.3, 698.0], [36.4, 699.0], [36.5, 701.0], [36.6, 702.0], [36.7, 703.0], [36.8, 705.0], [36.9, 706.0], [37.0, 708.0], [37.1, 711.0], [37.2, 712.0], [37.3, 715.0], [37.4, 721.0], [37.5, 731.0], [37.6, 737.0], [37.7, 747.0], [37.8, 752.0], [37.9, 760.0], [38.0, 766.0], [38.1, 791.0], [38.2, 849.0], [38.3, 860.0], [38.4, 865.0], [38.5, 868.0], [38.6, 873.0], [38.7, 880.0], [38.8, 882.0], [38.9, 886.0], [39.0, 888.0], [39.1, 890.0], [39.2, 891.0], [39.3, 893.0], [39.4, 894.0], [39.5, 897.0], [39.6, 901.0], [39.7, 906.0], [39.8, 914.0], [39.9, 921.0], [40.0, 927.0], [40.1, 930.0], [40.2, 947.0], [40.3, 950.0], [40.4, 954.0], [40.5, 957.0], [40.6, 958.0], [40.7, 959.0], [40.8, 961.0], [40.9, 962.0], [41.0, 964.0], [41.1, 967.0], [41.2, 969.0], [41.3, 979.0], [41.4, 984.0], [41.5, 989.0], [41.6, 1010.0], [41.7, 1012.0], [41.8, 1013.0], [41.9, 1014.0], [42.0, 1015.0], [42.1, 1015.0], [42.2, 1016.0], [42.3, 1016.0], [42.4, 1017.0], [42.5, 1017.0], [42.6, 1017.0], [42.7, 1017.0], [42.8, 1017.0], [42.9, 1017.0], [43.0, 1018.0], [43.1, 1018.0], [43.2, 1018.0], [43.3, 1018.0], [43.4, 1018.0], [43.5, 1018.0], [43.6, 1019.0], [43.7, 1019.0], [43.8, 1019.0], [43.9, 1019.0], [44.0, 1020.0], [44.1, 1020.0], [44.2, 1020.0], [44.3, 1020.0], [44.4, 1020.0], [44.5, 1021.0], [44.6, 1021.0], [44.7, 1021.0], [44.8, 1021.0], [44.9, 1021.0], [45.0, 1021.0], [45.1, 1022.0], [45.2, 1022.0], [45.3, 1022.0], [45.4, 1022.0], [45.5, 1022.0], [45.6, 1022.0], [45.7, 1022.0], [45.8, 1023.0], [45.9, 1023.0], [46.0, 1023.0], [46.1, 1023.0], [46.2, 1023.0], [46.3, 1023.0], [46.4, 1023.0], [46.5, 1024.0], [46.6, 1024.0], [46.7, 1024.0], [46.8, 1024.0], [46.9, 1024.0], [47.0, 1024.0], [47.1, 1024.0], [47.2, 1024.0], [47.3, 1025.0], [47.4, 1025.0], [47.5, 1025.0], [47.6, 1025.0], [47.7, 1025.0], [47.8, 1025.0], [47.9, 1026.0], [48.0, 1026.0], [48.1, 1026.0], [48.2, 1026.0], [48.3, 1026.0], [48.4, 1026.0], [48.5, 1027.0], [48.6, 1027.0], [48.7, 1027.0], [48.8, 1027.0], [48.9, 1027.0], [49.0, 1027.0], [49.1, 1027.0], [49.2, 1028.0], [49.3, 1028.0], [49.4, 1028.0], [49.5, 1028.0], [49.6, 1028.0], [49.7, 1029.0], [49.8, 1029.0], [49.9, 1029.0], [50.0, 1029.0], [50.1, 1029.0], [50.2, 1030.0], [50.3, 1030.0], [50.4, 1030.0], [50.5, 1031.0], [50.6, 1031.0], [50.7, 1031.0], [50.8, 1032.0], [50.9, 1032.0], [51.0, 1032.0], [51.1, 1033.0], [51.2, 1033.0], [51.3, 1033.0], [51.4, 1034.0], [51.5, 1034.0], [51.6, 1036.0], [51.7, 1036.0], [51.8, 1037.0], [51.9, 1038.0], [52.0, 1040.0], [52.1, 1041.0], [52.2, 1042.0], [52.3, 1044.0], [52.4, 1046.0], [52.5, 1046.0], [52.6, 1060.0], [52.7, 1067.0], [52.8, 1071.0], [52.9, 1073.0], [53.0, 1074.0], [53.1, 1076.0], [53.2, 1077.0], [53.3, 1078.0], [53.4, 1079.0], [53.5, 1080.0], [53.6, 1081.0], [53.7, 1082.0], [53.8, 1083.0], [53.9, 1085.0], [54.0, 1086.0], [54.1, 1088.0], [54.2, 1089.0], [54.3, 1090.0], [54.4, 1093.0], [54.5, 1095.0], [54.6, 1097.0], [54.7, 1100.0], [54.8, 1101.0], [54.9, 1105.0], [55.0, 1118.0], [55.1, 1123.0], [55.2, 1123.0], [55.3, 1126.0], [55.4, 1140.0], [55.5, 1233.0], [55.6, 1237.0], [55.7, 1237.0], [55.8, 1238.0], [55.9, 1238.0], [56.0, 1239.0], [56.1, 1239.0], [56.2, 1240.0], [56.3, 1240.0], [56.4, 1240.0], [56.5, 1241.0], [56.6, 1241.0], [56.7, 1241.0], [56.8, 1242.0], [56.9, 1242.0], [57.0, 1243.0], [57.1, 1243.0], [57.2, 1244.0], [57.3, 1246.0], [57.4, 1303.0], [57.5, 1305.0], [57.6, 1323.0], [57.7, 1325.0], [57.8, 1331.0], [57.9, 1333.0], [58.0, 1337.0], [58.1, 1340.0], [58.2, 1342.0], [58.3, 1347.0], [58.4, 1349.0], [58.5, 1351.0], [58.6, 1353.0], [58.7, 1355.0], [58.8, 1357.0], [58.9, 1359.0], [59.0, 1363.0], [59.1, 1365.0], [59.2, 1367.0], [59.3, 1369.0], [59.4, 1370.0], [59.5, 1372.0], [59.6, 1374.0], [59.7, 1376.0], [59.8, 1381.0], [59.9, 1386.0], [60.0, 1387.0], [60.1, 1390.0], [60.2, 1392.0], [60.3, 1395.0], [60.4, 1525.0], [60.5, 1527.0], [60.6, 1528.0], [60.7, 1528.0], [60.8, 1529.0], [60.9, 1530.0], [61.0, 1531.0], [61.1, 1532.0], [61.2, 1533.0], [61.3, 1533.0], [61.4, 1533.0], [61.5, 1535.0], [61.6, 1536.0], [61.7, 1536.0], [61.8, 1537.0], [61.9, 1537.0], [62.0, 1538.0], [62.1, 1541.0], [62.2, 1545.0], [62.3, 1556.0], [62.4, 1570.0], [62.5, 1581.0], [62.6, 1582.0], [62.7, 1583.0], [62.8, 1585.0], [62.9, 1586.0], [63.0, 1586.0], [63.1, 1594.0], [63.2, 1597.0], [63.3, 1599.0], [63.4, 1599.0], [63.5, 1601.0], [63.6, 1603.0], [63.7, 1606.0], [63.8, 2484.0], [63.9, 2494.0], [64.0, 2498.0], [64.1, 2513.0], [64.2, 2516.0], [64.3, 2519.0], [64.4, 2521.0], [64.5, 2550.0], [64.6, 2565.0], [64.7, 2588.0], [64.8, 2596.0], [64.9, 2603.0], [65.0, 2616.0], [65.1, 2623.0], [65.2, 2634.0], [65.3, 2640.0], [65.4, 3612.0], [65.5, 3630.0], [65.6, 3642.0], [65.7, 3644.0], [65.8, 3648.0], [65.9, 3661.0], [66.0, 3665.0], [66.1, 3669.0], [66.2, 3682.0], [66.3, 3690.0], [66.4, 3703.0], [66.5, 3712.0], [66.6, 3742.0], [66.7, 3760.0], [66.8, 3795.0], [66.9, 3800.0], [67.0, 3814.0], [67.1, 3823.0], [67.2, 3830.0], [67.3, 3844.0], [67.4, 3853.0], [67.5, 3859.0], [67.6, 3861.0], [67.7, 3865.0], [67.8, 3873.0], [67.9, 3916.0], [68.0, 3952.0], [68.1, 3962.0], [68.2, 3963.0], [68.3, 3965.0], [68.4, 3968.0], [68.5, 3969.0], [68.6, 3970.0], [68.7, 3970.0], [68.8, 3971.0], [68.9, 3972.0], [69.0, 3973.0], [69.1, 3975.0], [69.2, 3979.0], [69.3, 3980.0], [69.4, 3982.0], [69.5, 3984.0], [69.6, 3985.0], [69.7, 3987.0], [69.8, 3988.0], [69.9, 3991.0], [70.0, 3996.0], [70.1, 3998.0], [70.2, 4004.0], [70.3, 4008.0], [70.4, 4010.0], [70.5, 4016.0], [70.6, 4028.0], [70.7, 4035.0], [70.8, 4053.0], [70.9, 4055.0], [71.0, 4057.0], [71.1, 4058.0], [71.2, 4059.0], [71.3, 4060.0], [71.4, 4061.0], [71.5, 4062.0], [71.6, 4063.0], [71.7, 4066.0], [71.8, 4074.0], [71.9, 4081.0], [72.0, 4086.0], [72.1, 4092.0], [72.2, 4098.0], [72.3, 4107.0], [72.4, 4114.0], [72.5, 4115.0], [72.6, 4118.0], [72.7, 4120.0], [72.8, 4126.0], [72.9, 4129.0], [73.0, 4130.0], [73.1, 4132.0], [73.2, 4135.0], [73.3, 4138.0], [73.4, 4140.0], [73.5, 4142.0], [73.6, 4143.0], [73.7, 4145.0], [73.8, 4145.0], [73.9, 4146.0], [74.0, 4147.0], [74.1, 4147.0], [74.2, 4148.0], [74.3, 4148.0], [74.4, 4149.0], [74.5, 4149.0], [74.6, 4149.0], [74.7, 4150.0], [74.8, 4151.0], [74.9, 4152.0], [75.0, 4152.0], [75.1, 4153.0], [75.2, 4154.0], [75.3, 4155.0], [75.4, 4156.0], [75.5, 4157.0], [75.6, 4158.0], [75.7, 4159.0], [75.8, 4159.0], [75.9, 4160.0], [76.0, 4160.0], [76.1, 4161.0], [76.2, 4161.0], [76.3, 4161.0], [76.4, 4162.0], [76.5, 4163.0], [76.6, 4163.0], [76.7, 4164.0], [76.8, 4164.0], [76.9, 4165.0], [77.0, 4166.0], [77.1, 4167.0], [77.2, 4167.0], [77.3, 4168.0], [77.4, 4169.0], [77.5, 4170.0], [77.6, 4171.0], [77.7, 4171.0], [77.8, 4171.0], [77.9, 4172.0], [78.0, 4172.0], [78.1, 4173.0], [78.2, 4173.0], [78.3, 4174.0], [78.4, 4175.0], [78.5, 4175.0], [78.6, 4176.0], [78.7, 4178.0], [78.8, 4181.0], [78.9, 4181.0], [79.0, 4182.0], [79.1, 4183.0], [79.2, 4183.0], [79.3, 4184.0], [79.4, 4184.0], [79.5, 4185.0], [79.6, 4185.0], [79.7, 4185.0], [79.8, 4186.0], [79.9, 4186.0], [80.0, 4186.0], [80.1, 4187.0], [80.2, 4187.0], [80.3, 4188.0], [80.4, 4188.0], [80.5, 4189.0], [80.6, 4189.0], [80.7, 4190.0], [80.8, 4190.0], [80.9, 4191.0], [81.0, 4192.0], [81.1, 4193.0], [81.2, 4193.0], [81.3, 4194.0], [81.4, 4194.0], [81.5, 4195.0], [81.6, 4196.0], [81.7, 4196.0], [81.8, 4197.0], [81.9, 4198.0], [82.0, 4198.0], [82.1, 4198.0], [82.2, 4199.0], [82.3, 4199.0], [82.4, 4200.0], [82.5, 4200.0], [82.6, 4201.0], [82.7, 4202.0], [82.8, 4203.0], [82.9, 4206.0], [83.0, 4215.0], [83.1, 4220.0], [83.2, 4229.0], [83.3, 4238.0], [83.4, 4242.0], [83.5, 4253.0], [83.6, 4255.0], [83.7, 4256.0], [83.8, 4258.0], [83.9, 4262.0], [84.0, 4284.0], [84.1, 4288.0], [84.2, 4293.0], [84.3, 4295.0], [84.4, 4298.0], [84.5, 4299.0], [84.6, 4301.0], [84.7, 4302.0], [84.8, 4303.0], [84.9, 4304.0], [85.0, 4304.0], [85.1, 4305.0], [85.2, 4305.0], [85.3, 4305.0], [85.4, 4306.0], [85.5, 4306.0], [85.6, 4306.0], [85.7, 4307.0], [85.8, 4308.0], [85.9, 4308.0], [86.0, 4309.0], [86.1, 4309.0], [86.2, 4310.0], [86.3, 4310.0], [86.4, 4311.0], [86.5, 4312.0], [86.6, 4313.0], [86.7, 4315.0], [86.8, 4316.0], [86.9, 4317.0], [87.0, 4319.0], [87.1, 4321.0], [87.2, 4325.0], [87.3, 4327.0], [87.4, 4328.0], [87.5, 4328.0], [87.6, 4330.0], [87.7, 4330.0], [87.8, 4331.0], [87.9, 4332.0], [88.0, 4334.0], [88.1, 4336.0], [88.2, 4340.0], [88.3, 4347.0], [88.4, 4349.0], [88.5, 4350.0], [88.6, 4351.0], [88.7, 4352.0], [88.8, 4354.0], [88.9, 4357.0], [89.0, 4360.0], [89.1, 4361.0], [89.2, 4362.0], [89.3, 4362.0], [89.4, 4364.0], [89.5, 4364.0], [89.6, 4364.0], [89.7, 4365.0], [89.8, 4365.0], [89.9, 4366.0], [90.0, 4367.0], [90.1, 4368.0], [90.2, 4369.0], [90.3, 4373.0], [90.4, 4376.0], [90.5, 4384.0], [90.6, 4452.0], [90.7, 4503.0], [90.8, 4507.0], [90.9, 4509.0], [91.0, 4510.0], [91.1, 4512.0], [91.2, 4512.0], [91.3, 4514.0], [91.4, 4515.0], [91.5, 4516.0], [91.6, 4517.0], [91.7, 4518.0], [91.8, 4519.0], [91.9, 4519.0], [92.0, 4520.0], [92.1, 4521.0], [92.2, 4522.0], [92.3, 4524.0], [92.4, 4524.0], [92.5, 4526.0], [92.6, 4526.0], [92.7, 4527.0], [92.8, 4529.0], [92.9, 4530.0], [93.0, 4531.0], [93.1, 4533.0], [93.2, 4536.0], [93.3, 4538.0], [93.4, 4559.0], [93.5, 4594.0], [93.6, 4595.0], [93.7, 4596.0], [93.8, 4599.0], [93.9, 4600.0], [94.0, 4601.0], [94.1, 4602.0], [94.2, 4603.0], [94.3, 4604.0], [94.4, 4605.0], [94.5, 4607.0], [94.6, 4608.0], [94.7, 4609.0], [94.8, 4610.0], [94.9, 4614.0], [95.0, 4617.0], [95.1, 4618.0], [95.2, 4619.0], [95.3, 4623.0], [95.4, 4626.0], [95.5, 4633.0], [95.6, 4669.0], [95.7, 4672.0], [95.8, 4673.0], [95.9, 4675.0], [96.0, 4677.0], [96.1, 4680.0], [96.2, 4721.0], [96.3, 4770.0], [96.4, 4775.0], [96.5, 4792.0], [96.6, 4802.0], [96.7, 4829.0], [96.8, 4837.0], [96.9, 4838.0], [97.0, 4840.0], [97.1, 4842.0], [97.2, 4843.0], [97.3, 4844.0], [97.4, 4844.0], [97.5, 4845.0], [97.6, 4845.0], [97.7, 4846.0], [97.8, 4846.0], [97.9, 4847.0], [98.0, 4847.0], [98.1, 4848.0], [98.2, 4849.0], [98.3, 4849.0], [98.4, 4850.0], [98.5, 4850.0], [98.6, 4850.0], [98.7, 4851.0], [98.8, 4851.0], [98.9, 4852.0], [99.0, 4852.0], [99.1, 4853.0], [99.2, 4854.0], [99.3, 4855.0], [99.4, 4859.0], [99.5, 4863.0], [99.6, 5027.0], [99.7, 5338.0], [99.8, 5344.0], [99.9, 5367.0], [100.0, 5514.0]], "isOverall": false, "label": "/user/get", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 659.0, "series": [{"data": [[33100.0, 1.0], [34100.0, 21.0], [34300.0, 26.0], [34500.0, 35.0], [33300.0, 9.0], [35900.0, 88.0], [35700.0, 37.0], [36700.0, 66.0], [36100.0, 6.0], [36500.0, 19.0], [36300.0, 5.0], [37300.0, 76.0], [37900.0, 31.0], [38100.0, 43.0], [36900.0, 87.0], [38300.0, 37.0], [37500.0, 36.0], [37700.0, 47.0], [37100.0, 35.0], [38500.0, 60.0], [38700.0, 29.0], [38900.0, 109.0], [39100.0, 14.0], [39300.0, 7.0], [4600.0, 3.0], [4500.0, 3.0], [5800.0, 6.0], [5900.0, 3.0], [6000.0, 1.0], [6100.0, 2.0], [6200.0, 33.0], [6300.0, 22.0], [6600.0, 26.0], [6500.0, 21.0], [6400.0, 30.0], [6800.0, 17.0], [6700.0, 28.0], [6900.0, 32.0], [7000.0, 50.0], [7100.0, 86.0], [7300.0, 39.0], [7400.0, 41.0], [7200.0, 32.0], [7600.0, 68.0], [7500.0, 114.0], [7700.0, 37.0], [7900.0, 47.0], [7800.0, 58.0], [8000.0, 26.0], [8100.0, 45.0], [8300.0, 41.0], [8600.0, 76.0], [8700.0, 59.0], [8400.0, 53.0], [8500.0, 61.0], [8200.0, 56.0], [9200.0, 70.0], [9000.0, 82.0], [9100.0, 141.0], [8900.0, 26.0], [8800.0, 14.0], [9300.0, 3.0], [9500.0, 2.0], [9700.0, 19.0], [9400.0, 1.0], [9600.0, 14.0], [9800.0, 57.0], [9900.0, 80.0], [10000.0, 4.0], [10100.0, 8.0], [10400.0, 9.0], [10500.0, 11.0], [10300.0, 2.0], [10600.0, 8.0], [11000.0, 18.0], [11100.0, 54.0], [10900.0, 3.0], [11200.0, 6.0], [10800.0, 1.0], [11700.0, 6.0], [11300.0, 10.0], [11500.0, 11.0], [11600.0, 11.0], [11400.0, 16.0], [11900.0, 30.0], [12100.0, 25.0], [12200.0, 25.0], [12000.0, 16.0], [11800.0, 9.0], [12600.0, 20.0], [12500.0, 20.0], [12700.0, 35.0], [12300.0, 10.0], [12400.0, 16.0], [12800.0, 89.0], [12900.0, 30.0], [13300.0, 32.0], [13000.0, 18.0], [13100.0, 17.0], [13200.0, 12.0], [13400.0, 70.0], [13500.0, 60.0], [13600.0, 78.0], [13700.0, 35.0], [13800.0, 48.0], [13900.0, 39.0], [14000.0, 25.0], [14100.0, 7.0], [14200.0, 85.0], [14300.0, 62.0], [14400.0, 45.0], [14500.0, 42.0], [14600.0, 30.0], [14700.0, 44.0], [14800.0, 25.0], [14900.0, 9.0], [19800.0, 1.0], [33800.0, 1.0], [34400.0, 79.0], [34200.0, 39.0], [33600.0, 1.0], [35600.0, 35.0], [35800.0, 37.0], [36600.0, 62.0], [36000.0, 110.0], [36800.0, 103.0], [36400.0, 8.0], [38400.0, 63.0], [38000.0, 50.0], [38200.0, 40.0], [37400.0, 47.0], [37000.0, 45.0], [37600.0, 73.0], [37200.0, 75.0], [37800.0, 31.0], [38600.0, 66.0], [38800.0, 38.0], [39000.0, 9.0], [39200.0, 52.0]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[0.0, 403.0], [600.0, 335.0], [700.0, 84.0], [800.0, 72.0], [900.0, 97.0], [1000.0, 659.0], [1100.0, 39.0], [1200.0, 94.0], [1300.0, 149.0], [1500.0, 154.0], [100.0, 153.0], [1600.0, 19.0], [2400.0, 12.0], [2500.0, 40.0], [2600.0, 25.0], [200.0, 357.0], [3500.0, 2.0], [3600.0, 48.0], [3700.0, 28.0], [3800.0, 48.0], [3900.0, 114.0], [4000.0, 106.0], [4100.0, 507.0], [4300.0, 298.0], [4200.0, 109.0], [4400.0, 7.0], [4500.0, 160.0], [4600.0, 115.0], [4700.0, 21.0], [4800.0, 147.0], [300.0, 220.0], [5000.0, 7.0], [5100.0, 1.0], [5300.0, 14.0], [5500.0, 2.0], [400.0, 95.0], [500.0, 259.0]], "isOverall": false, "label": "/user/get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 39300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1228.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 3692.0, "series": [{"data": [[0.0, 1228.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1788.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 3292.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 3692.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 859.7195335276973, "minX": 1.740304414E12, "maxY": 5000.0, "series": [{"data": [[1.740304449E12, 859.7195335276973], [1.740304429E12, 1989.0], [1.740304414E12, 5000.0], [1.740304415E12, 5000.0], [1.74030442E12, 5000.0], [1.740304419E12, 5000.0], [1.740304442E12, 1988.0], [1.740304417E12, 5000.0], [1.740304418E12, 5000.0], [1.740304448E12, 1769.1237274862956], [1.740304447E12, 1771.9589285714296], [1.740304444E12, 1917.5909090909086], [1.740304422E12, 4991.073170731711], [1.740304443E12, 1986.1666666666667], [1.740304424E12, 2275.2533185840693], [1.740304445E12, 1782.45], [1.740304423E12, 3776.9281108962027]], "isOverall": false, "label": "OTUS", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.740304449E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 2.0, "maxY": 38282.62820512821, "series": [{"data": [[1770.0, 37978.506476683964], [1786.0, 33337.4], [1781.0, 33348.75], [1777.0, 33603.0], [1776.0, 35618.0], [1773.0, 35936.28804347826], [1772.0, 36044.220588235316], [1771.0, 37501.908789386434], [1769.0, 38282.62820512821], [1955.0, 34191.0], [1982.0, 34219.666666666664], [1979.0, 34170.5], [1975.0, 34309.818181818184], [1934.0, 34432.4], [1932.0, 34500.5], [1931.0, 34467.10526315789], [1927.0, 34451.21428571429], [1951.0, 34495.0], [1943.0, 34390.799999999996], [1939.0, 34442.04761904762], [1964.0, 34329.34782608695], [1957.0, 34385.19047619048], [1956.0, 34186.0], [1954.0, 34404.07692307693], [1952.0, 34334.58823529411], [2020.0, 14826.0], [2027.0, 14503.0], [2042.0, 14795.0], [2047.0, 13408.0], [2019.0, 14814.0], [2016.0, 14133.333333333334], [2022.0, 14859.0], [2026.0, 14850.0], [2024.0, 13697.0], [2039.0, 14828.0], [2037.0, 14828.0], [2034.0, 13568.0], [1999.0, 14609.0], [1996.0, 13679.0], [1994.0, 14909.0], [1992.0, 13664.666666666666], [1989.0, 19850.0], [1988.0, 33165.0], [1987.0, 33861.0], [1986.0, 34208.0], [1984.0, 34129.5], [2015.0, 14908.0], [2014.0, 14891.0], [2013.0, 13412.0], [2012.0, 14896.0], [2009.0, 14867.0], [2002.0, 14889.5], [2000.0, 14929.0], [2031.0, 13600.333333333334], [2030.0, 14803.0], [2028.0, 13246.0], [2068.0, 14291.333333333334], [2078.0, 14807.0], [2116.0, 14655.333333333334], [2162.0, 12411.0], [2112.0, 14754.0], [2126.0, 14494.666666666666], [2160.0, 14422.0], [2152.0, 14469.0], [2074.0, 14780.0], [2072.0, 14781.0], [2060.0, 13570.666666666666], [2056.0, 14176.0], [2052.0, 14787.0], [2050.0, 14293.333333333334], [2110.0, 13779.0], [2106.0, 14743.0], [2104.0, 14744.0], [2098.0, 14762.0], [2094.0, 14573.0], [2092.0, 13301.0], [2090.0, 14758.5], [2086.0, 14806.0], [2080.0, 13912.0], [2138.0, 12420.0], [2132.0, 14730.0], [2284.0, 13543.5], [2200.0, 14632.0], [2192.0, 14328.727272727272], [2240.0, 14536.272727272726], [2228.0, 14661.0], [2424.0, 13397.625], [2430.0, 13762.5], [2378.0, 14271.533333333335], [2370.0, 14094.2], [2330.0, 14547.0], [2514.0, 14321.0], [2518.0, 13912.142857142857], [2510.0, 13947.1], [2508.0, 14397.0], [2502.0, 13861.421052631578], [2634.0, 14114.25], [2644.0, 14037.42857142857], [2640.0, 13813.25], [2636.0, 11998.0], [2630.0, 13519.5], [2590.0, 12003.0], [2616.0, 14232.0], [2612.0, 11998.0], [2594.0, 12844.0], [2812.0, 14233.0], [2800.0, 13928.0], [2796.0, 12832.0], [2770.0, 14301.0], [2736.0, 14304.0], [2718.0, 14269.0], [2826.0, 13134.333333333334], [2844.0, 14296.0], [2894.0, 13602.0], [2840.0, 14298.0], [2822.0, 11996.0], [2880.0, 13614.0], [2872.0, 11989.0], [2870.0, 14264.0], [2860.0, 14267.0], [3008.0, 13374.0], [3012.0, 12874.0], [3036.0, 14042.0], [3016.0, 14036.0], [2972.0, 14105.0], [2960.0, 11816.0], [2954.0, 14069.0], [2952.0, 13199.5], [2950.0, 14087.0], [3142.0, 13974.0], [3130.0, 13979.0], [3128.0, 14018.0], [3230.0, 12733.0], [3284.0, 13955.0], [3244.0, 13293.0], [3224.0, 13826.5], [3212.0, 12517.0], [3208.0, 13923.0], [3206.0, 13351.5], [3404.0, 13886.0], [3406.0, 13886.0], [3366.0, 13899.0], [3582.0, 13173.794117647058], [3688.0, 13782.0], [3690.0, 13080.5], [3710.0, 13785.0], [3652.0, 13540.0], [3650.0, 13150.0], [3608.0, 12852.5], [3586.0, 13169.25], [3584.0, 13724.0], [3642.0, 13546.0], [3638.0, 13818.0], [3636.0, 11541.0], [3634.0, 12963.0], [3630.0, 13820.0], [3628.0, 13795.0], [3624.0, 12376.0], [3654.0, 12348.0], [3774.0, 13763.0], [3764.0, 13778.0], [3742.0, 13756.5], [3730.0, 12187.0], [3720.0, 12921.0], [3944.0, 11622.0], [3964.0, 13684.0], [3938.0, 13522.333333333334], [3910.0, 13756.0], [3880.0, 11484.0], [3878.0, 13714.0], [4034.0, 13652.0], [4086.0, 13157.2], [4046.0, 12526.0], [4058.0, 13648.0], [4060.0, 13355.333333333334], [4062.0, 12430.0], [4084.0, 13627.0], [4082.0, 13628.0], [4070.0, 13282.857142857143], [4064.0, 13336.6], [3974.0, 12951.666666666666], [4002.0, 13383.045454545454], [4000.0, 12449.666666666666], [4316.0, 13640.0], [4208.0, 13648.0], [4268.0, 13572.0], [4180.0, 13613.0], [4168.0, 13619.0], [4564.0, 11285.0], [4588.0, 12965.4], [4452.0, 13574.0], [4428.0, 13486.5], [4424.0, 13314.0], [4632.0, 12899.0], [4828.0, 12253.5], [4616.0, 13558.0], [4640.0, 11569.0], [4656.0, 11278.0], [4668.0, 12398.5], [4664.0, 13558.0], [4732.0, 13131.625], [4708.0, 12733.0], [4700.0, 12912.0], [4988.0, 12841.0], [5000.0, 8381.753630984393], [4880.0, 13139.0], [4980.0, 12670.6], [4976.0, 13379.0], [4972.0, 11970.0], [4325.0, 12384.0], [4573.0, 13515.0], [4553.0, 13538.5], [4441.0, 12923.0], [4429.0, 13137.5], [4425.0, 13542.0], [4809.0, 11137.0], [4741.0, 12779.0], [4733.0, 12932.024390243905], [4625.0, 12318.0], [4633.0, 13504.0], [4705.0, 12505.6], [4701.0, 11268.0], [4753.0, 13462.0], [4745.0, 13461.0], [4993.0, 12298.272727272726], [4901.0, 13418.5], [4997.0, 12514.999999999998], [4909.0, 12749.699999999999], [4989.0, 12155.052631578948], [4985.0, 12320.151898734179], [4981.0, 13389.0], [2073.0, 14738.0], [2129.0, 13233.0], [2163.0, 14671.0], [2115.0, 14764.0], [2113.0, 14685.0], [2117.0, 14748.0], [2123.0, 14366.363636363636], [2151.0, 13208.0], [2077.0, 14760.0], [2075.0, 14771.0], [2065.0, 14044.333333333334], [2063.0, 14794.0], [2061.0, 12524.0], [2055.0, 12531.0], [2051.0, 13586.0], [2111.0, 14729.6], [2107.0, 14699.0], [2101.0, 14783.0], [2099.0, 14023.75], [2097.0, 14763.0], [2095.0, 14790.0], [2081.0, 14801.0], [2143.0, 13981.666666666666], [2279.0, 14077.444444444445], [2261.0, 14599.0], [2259.0, 13973.166666666666], [2241.0, 13194.0], [2217.0, 14587.0], [2213.0, 14632.0], [2419.0, 14173.0], [2377.0, 14571.0], [2347.0, 14597.0], [2329.0, 14016.933333333332], [2305.0, 12316.0], [2521.0, 14063.0], [2519.0, 13970.375], [2511.0, 13193.5], [2509.0, 14092.347826086956], [2507.0, 13825.076923076924], [2503.0, 13839.454545454544], [2639.0, 14275.0], [2641.0, 14038.142857142857], [2637.0, 12813.0], [2635.0, 14265.0], [2633.0, 13642.75], [2617.0, 12818.0], [2613.0, 13617.0], [2809.0, 13970.333333333334], [2801.0, 12286.0], [2841.0, 14265.0], [2943.0, 14126.0], [2827.0, 14225.0], [2831.0, 14266.0], [2823.0, 14270.0], [2817.0, 14298.0], [2905.0, 13737.866666666663], [2903.0, 13850.5], [2899.0, 13404.0], [2891.0, 14263.0], [2879.0, 14216.0], [2863.0, 14265.5], [2857.0, 14264.0], [2851.0, 14268.0], [2849.0, 13049.0], [2953.0, 11818.0], [3045.0, 13172.0], [3025.0, 13977.0], [3003.0, 12818.0], [2997.0, 11768.0], [2965.0, 13830.0], [2951.0, 13302.0], [2949.0, 12630.0], [3095.0, 14054.0], [3229.0, 13957.0], [3231.0, 13984.0], [3287.0, 13952.0], [3281.0, 13977.0], [3235.0, 11676.0], [3233.0, 13952.0], [3221.0, 13646.0], [3213.0, 13584.5], [3209.0, 13952.666666666666], [3205.0, 13511.631578947372], [3351.0, 13947.0], [3349.0, 13894.0], [3529.0, 11949.0], [3473.0, 13962.0], [3459.0, 13895.0], [3615.0, 13857.0], [3687.0, 12932.0], [3653.0, 13804.0], [3683.0, 13818.0], [3613.0, 13865.0], [3599.0, 13835.5], [3645.0, 13800.0], [3637.0, 12566.0], [3629.0, 13771.0], [3623.0, 13818.0], [3617.0, 12698.0], [3667.0, 12568.0], [3655.0, 13614.0], [3765.0, 13780.0], [3963.0, 13725.5], [3953.0, 13746.0], [3939.0, 13167.0], [4035.0, 13657.0], [4077.0, 13630.0], [4037.0, 12430.0], [4053.0, 13637.666666666666], [4059.0, 13678.0], [4061.0, 12187.0], [4075.0, 11355.0], [4073.0, 12207.0], [4069.0, 12409.0], [4067.0, 13395.0], [4065.0, 13611.333333333334], [3999.0, 12146.5], [3989.0, 11444.0], [3975.0, 12281.0], [4009.0, 13657.0], [4003.0, 13381.0], [4001.0, 13621.333333333332], [4330.0, 13605.0], [4250.0, 12395.5], [4170.0, 11645.0], [4402.0, 12962.0], [4562.0, 13591.0], [4510.0, 12715.0], [4502.0, 11692.0], [4542.0, 13071.8], [4458.0, 13566.0], [4454.0, 13533.0], [4446.0, 13566.0], [4426.0, 13580.0], [4742.0, 13388.0], [4758.0, 13197.0], [4834.0, 13407.0], [4654.0, 13552.0], [4698.0, 13539.0], [4782.0, 13425.0], [4762.0, 11985.0], [4990.0, 12860.0], [4986.0, 12084.875], [4974.0, 12817.0], [4331.0, 13641.0], [4351.0, 13637.0], [4099.0, 12202.0], [4251.0, 13637.0], [4607.0, 13580.0], [4535.0, 13308.0], [4583.0, 13584.0], [4567.0, 13588.0], [4563.0, 12240.0], [4559.0, 13559.5], [4379.0, 13595.0], [4831.0, 11131.0], [4759.0, 13383.0], [4991.0, 12598.066666666666], [4987.0, 12584.0], [4979.0, 12954.57142857143]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[3367.1183999999835, 20980.30839999999]], "isOverall": false, "label": "/user/search-Aggregated", "isController": false}, {"data": [[2.0, 517.5], [6.0, 518.0], [8.0, 516.8], [17.0, 516.4444444444445], [19.0, 512.5], [20.0, 513.0], [23.0, 514.5], [24.0, 518.0], [26.0, 514.0], [27.0, 515.0], [29.0, 510.0], [31.0, 520.0], [35.0, 515.8333333333334], [36.0, 512.0], [38.0, 514.0], [40.0, 516.0], [44.0, 514.0], [48.0, 513.0], [53.0, 519.0], [52.0, 512.5714285714286], [56.0, 512.6666666666666], [59.0, 1537.0], [58.0, 514.0], [61.0, 507.5], [71.0, 1019.5], [69.0, 1150.75], [75.0, 512.5], [79.0, 1024.5], [77.0, 1531.0], [76.0, 855.3333333333334], [87.0, 854.3333333333334], [85.0, 1533.0], [90.0, 515.0], [89.0, 685.1666666666666], [95.0, 505.0], [93.0, 854.3333333333333], [99.0, 1027.3333333333333], [98.0, 767.5], [103.0, 1280.5], [102.0, 1528.0], [101.0, 1028.0], [107.0, 1020.0], [105.0, 1276.0], [111.0, 1531.0], [108.0, 1543.0], [113.0, 1536.0], [112.0, 1190.6666666666667], [118.0, 1029.5], [116.0, 1365.3333333333333], [122.0, 1274.75], [134.0, 514.0], [132.0, 512.0], [131.0, 1136.0], [143.0, 1198.6666666666667], [140.0, 518.0], [138.0, 1194.0], [136.0, 1525.0], [150.0, 1025.6], [145.0, 519.0], [144.0, 1027.5], [159.0, 1535.5], [157.0, 515.5], [155.0, 516.2], [167.0, 1027.5], [165.0, 515.0], [164.0, 516.0], [163.0, 1153.5], [175.0, 1028.0], [174.0, 1022.3333333333334], [173.0, 1021.0], [172.0, 1015.0], [171.0, 1538.0], [183.0, 1025.0], [182.0, 1279.0], [180.0, 1528.0], [179.0, 1023.0], [178.0, 1188.6666666666667], [190.0, 1020.6666666666666], [187.0, 639.25], [196.0, 1529.0], [195.0, 1328.4], [207.0, 1026.0], [205.0, 1527.0], [204.0, 1029.0], [202.0, 511.5], [200.0, 1021.5], [215.0, 764.5], [213.0, 769.25], [210.0, 517.0], [209.0, 518.0], [223.0, 1531.5], [221.0, 1022.0], [220.0, 1024.2], [229.0, 1023.0], [228.0, 1535.0], [226.0, 854.3333333333334], [234.0, 1022.2], [247.0, 511.0], [246.0, 1275.0], [244.0, 1023.0], [243.0, 1080.222222222222], [255.0, 1524.0], [254.0, 1020.0], [253.0, 1020.8333333333333], [271.0, 512.75], [267.0, 685.8333333333333], [264.0, 854.6666666666666], [262.0, 1020.5], [256.0, 1536.0], [281.0, 1029.0], [280.0, 1026.5], [275.0, 1020.0], [272.0, 1529.0], [291.0, 513.0], [303.0, 1019.0], [302.0, 1539.0], [299.0, 1363.0], [298.0, 1026.0], [294.0, 1018.5], [292.0, 1278.0], [289.0, 941.6666666666667], [288.0, 861.6666666666666], [312.0, 1612.0], [311.0, 1530.0], [310.0, 1526.0], [308.0, 1022.0], [307.0, 1023.0], [305.0, 1375.3333333333333], [331.0, 1578.0], [329.0, 506.0], [328.0, 1063.0], [326.0, 1551.0], [325.0, 1027.2], [323.0, 1066.0], [321.0, 1328.0], [343.0, 1314.0], [341.0, 504.0], [340.0, 513.0], [339.0, 516.75], [338.0, 509.6666666666667], [337.0, 520.0], [364.0, 961.0], [363.0, 1314.0], [355.0, 1407.6666666666667], [352.0, 1160.111111111111], [376.0, 1594.0], [375.0, 1017.3333333333334], [372.0, 1249.25], [399.0, 1208.0], [398.0, 1594.0], [391.0, 1184.25], [390.0, 1599.0], [387.0, 1601.0], [386.0, 1599.0], [384.0, 1193.75], [413.0, 1595.0], [412.0, 517.5], [410.0, 516.0], [408.0, 1020.5], [406.0, 684.6666666666666], [403.0, 1308.5], [401.0, 520.0], [400.0, 1597.0], [419.0, 1591.0], [430.0, 1303.0], [428.0, 526.0], [426.0, 533.0], [425.0, 1588.0], [424.0, 1027.5], [423.0, 539.0], [420.0, 1018.0], [418.0, 757.0], [416.0, 515.3333333333334], [444.0, 1308.0], [442.0, 864.25], [438.0, 1016.0], [437.0, 854.3333333333334], [435.0, 840.5], [434.0, 1020.0], [432.0, 1026.0], [463.0, 1585.0], [462.0, 1019.0], [460.0, 1020.6666666666666], [457.0, 1361.6], [452.0, 1585.3333333333333], [450.0, 1586.0], [448.0, 1303.5], [478.0, 1583.0], [479.0, 1583.0], [477.0, 1195.1666666666665], [476.0, 777.0], [475.0, 1020.0], [473.0, 1115.5], [467.0, 1301.5], [465.0, 766.0], [464.0, 1584.0], [495.0, 707.0], [494.0, 1020.3333333333334], [493.0, 1018.0], [490.0, 1127.0], [486.0, 1582.0], [484.0, 1306.0], [483.0, 712.0], [480.0, 1581.0], [508.0, 708.0], [506.0, 708.5], [503.0, 707.0], [502.0, 763.0], [500.0, 940.75], [496.0, 1574.0], [518.0, 1143.0], [540.0, 883.0], [538.0, 1015.0], [536.0, 718.0], [524.0, 1024.0], [522.0, 1023.0], [520.0, 1292.5], [516.0, 1569.0], [514.0, 754.0], [512.0, 845.0], [574.0, 693.0], [572.0, 685.0], [570.0, 805.0], [566.0, 737.0], [562.0, 723.0], [554.0, 709.0], [552.0, 760.4], [546.0, 918.8333333333334], [604.0, 688.0], [606.0, 780.25], [600.0, 1019.0], [578.0, 854.0], [576.0, 1030.0], [594.0, 1028.0], [592.0, 1016.0], [590.0, 698.0], [588.0, 684.5], [586.0, 1023.5], [584.0, 698.0], [636.0, 707.0], [634.0, 714.0], [628.0, 874.0], [626.0, 723.0], [618.0, 858.5], [616.0, 825.2], [670.0, 802.0], [668.0, 694.0], [660.0, 1024.25], [656.0, 702.5], [652.0, 806.6666666666666], [650.0, 1029.0], [646.0, 869.5], [640.0, 806.6666666666666], [700.0, 1025.0], [696.0, 859.5], [694.0, 803.6666666666666], [688.0, 697.0], [678.0, 834.0], [672.0, 700.0], [734.0, 856.0], [730.0, 915.6666666666666], [728.0, 693.0], [726.0, 695.5], [724.0, 760.8], [718.0, 917.0], [714.0, 695.0], [756.0, 691.0], [754.0, 691.0], [752.0, 803.6666666666666], [750.0, 696.0], [744.0, 863.5], [740.0, 1026.0], [738.0, 692.0], [736.0, 733.0], [798.0, 683.5], [796.0, 1029.0], [794.0, 681.0], [792.0, 1030.0], [784.0, 1023.0], [780.0, 856.0], [778.0, 748.0], [830.0, 670.0], [828.0, 847.0], [822.0, 843.0], [820.0, 1030.0], [812.0, 682.0], [808.0, 678.5], [802.0, 910.6666666666666], [850.0, 1027.0], [848.0, 666.5], [846.0, 727.5], [840.0, 667.0], [892.0, 655.0], [890.0, 660.3333333333334], [874.0, 1024.5], [872.0, 663.5], [870.0, 663.0], [868.0, 867.5714285714287], [926.0, 840.3333333333333], [920.0, 857.6923076923076], [914.0, 1023.0], [904.0, 1022.0], [902.0, 768.3000000000001], [958.0, 791.0], [952.0, 728.8], [946.0, 677.0], [930.0, 652.0], [990.0, 632.0], [984.0, 1019.0], [976.0, 671.0], [974.0, 1025.5], [972.0, 929.75], [968.0, 777.6666666666666], [964.0, 654.0], [962.0, 840.5], [1018.0, 1022.0], [1016.0, 618.0], [1008.0, 843.4999999999999], [992.0, 592.0], [1076.0, 607.0], [1060.0, 1031.0], [1052.0, 1032.0], [1048.0, 820.5], [1044.0, 744.6666666666666], [1040.0, 1020.5], [1028.0, 724.0], [1132.0, 1046.0], [1120.0, 1026.0], [1112.0, 1029.0], [1108.0, 713.0], [1104.0, 1034.5], [1100.0, 1022.0], [1092.0, 606.0], [1088.0, 821.0], [1208.0, 614.0], [1200.0, 596.5], [1192.0, 1044.0], [1184.0, 1040.0], [1168.0, 885.3333333333334], [1156.0, 592.0], [1264.0, 1026.0], [1268.0, 1027.3333333333333], [1224.0, 600.3333333333334], [1220.0, 575.0], [1216.0, 595.5], [1260.0, 1026.0], [1248.0, 1025.0], [1232.0, 815.0], [1336.0, 1025.0], [1320.0, 1026.8], [1296.0, 1029.0], [1292.0, 1029.5], [1396.0, 1054.3333333333333], [1404.0, 1075.0], [1356.0, 1022.3333333333334], [1344.0, 1024.0], [1388.0, 1106.0], [1384.0, 1026.0], [1376.0, 1026.0], [1368.0, 936.2], [1468.0, 1072.3333333333333], [1416.0, 1077.0], [1408.0, 1108.0], [1452.0, 1082.2], [1440.0, 1077.5], [1528.0, 1246.0], [1516.0, 1080.0], [1508.0, 1081.0], [1504.0, 1079.0], [1472.0, 1067.0], [1500.0, 1082.2], [1492.0, 1093.0], [1488.0, 1092.75], [1592.0, 1239.0], [1596.0, 1238.5], [1588.0, 1238.0], [1584.0, 1239.0], [1544.0, 1243.0], [1552.0, 1242.0], [1576.0, 1240.0], [1572.0, 1240.0], [1656.0, 1338.0], [1660.0, 1340.0], [1600.0, 1239.0], [1644.0, 1331.0], [1636.0, 1323.0], [1632.0, 1323.25], [1628.0, 1301.0], [1620.0, 1268.5], [1668.0, 1348.0], [1720.0, 1368.0], [1708.0, 1365.3333333333333], [1700.0, 1364.0], [1664.0, 1345.6666666666667], [1692.0, 1356.0], [1684.0, 1353.0], [1680.0, 1353.0], [1784.0, 4.0], [1760.0, 1388.5], [1780.0, 4.0], [1776.0, 4.0], [1732.0, 1375.0], [1728.0, 1370.0], [1756.0, 1389.5], [1772.0, 201.0], [1768.0, 1395.25], [1848.0, 71.0], [1852.0, 67.0], [1844.0, 60.0], [1796.0, 28.25], [1800.0, 27.5], [1804.0, 34.333333333333336], [1812.0, 38.0], [1808.0, 36.5], [1836.0, 54.0], [1824.0, 44.6], [1864.0, 78.0], [1908.0, 101.0], [1860.0, 66.0], [1856.0, 69.0], [1892.0, 93.0], [1880.0, 82.5], [1876.0, 81.66666666666667], [1872.0, 81.0], [1976.0, 5.0], [1972.0, 10.0], [1968.0, 5.666666666666667], [1920.0, 109.0], [1964.0, 8.285714285714285], [1952.0, 40.22222222222222], [1988.0, 4.0], [2024.0, 17.0], [2016.0, 15.0], [2036.0, 15.0], [1984.0, 9.0], [1992.0, 2.0], [1996.0, 5.0], [2012.0, 10.666666666666666], [2008.0, 15.0], [2000.0, 7.0], [2028.0, 14.0], [2020.0, 17.0], [2144.0, 42.0], [2152.0, 69.0], [2128.0, 79.0], [2112.0, 39.0], [2072.0, 27.666666666666668], [2064.0, 16.0], [2056.0, 29.0], [2096.0, 34.0], [2080.0, 29.0], [2136.0, 85.0], [2120.0, 41.0], [2200.0, 116.0], [2240.0, 151.27272727272725], [2232.0, 94.0], [2208.0, 33.0], [2192.0, 188.0], [2424.0, 245.5], [2416.0, 212.5], [2368.0, 253.2], [2304.0, 176.0], [2480.0, 217.0], [2472.0, 217.0], [2456.0, 221.0], [2640.0, 2642.0], [2632.0, 4844.0], [2616.0, 4403.5], [2608.0, 4332.0], [2800.0, 4483.0], [2784.0, 4572.5], [2776.0, 507.0], [2736.0, 406.3333333333333], [2888.0, 2625.5], [2872.0, 454.0], [2840.0, 2264.0], [3056.0, 3898.0], [3064.0, 269.0], [2968.0, 4510.0], [2960.0, 2975.6666666666665], [3000.0, 4059.0], [2992.0, 4352.166666666667], [3016.0, 4344.0], [3008.0, 4056.0], [3168.0, 265.0], [3192.0, 4056.0], [3080.0, 4339.5], [3128.0, 4230.5], [3112.0, 4195.25], [3104.0, 4064.3333333333335], [3152.0, 4057.0], [3320.0, 4527.0], [3280.0, 3984.0], [3208.0, 4559.0], [3224.0, 294.3333333333333], [3240.0, 3997.5], [3424.0, 1530.0], [3352.0, 3982.0], [3376.0, 2177.0], [3368.0, 290.0], [3360.0, 4342.333333333333], [3408.0, 4345.333333333333], [3552.0, 3992.0], [3512.0, 4515.0], [3464.0, 3988.5], [3504.0, 3967.0], [3488.0, 3255.5], [3544.0, 4012.0], [3608.0, 280.99999999999994], [3688.0, 362.0], [3648.0, 247.5], [3656.0, 422.0], [3584.0, 394.0], [3632.0, 457.0], [3624.0, 340.0], [3616.0, 265.0], [3736.0, 328.0], [3720.0, 885.0], [3952.0, 2604.0], [3904.0, 932.6666666666666], [3944.0, 2890.4], [3936.0, 848.0], [3840.0, 585.5], [3864.0, 964.0], [3880.0, 628.0], [3928.0, 882.5], [4064.0, 4227.0], [4048.0, 1004.0], [4080.0, 4217.0], [4072.0, 3792.5], [3992.0, 2592.5], [4024.0, 2502.0], [4016.0, 2499.0], [4000.0, 4302.0], [4096.0, 4203.0], [4224.0, 4192.0], [4304.0, 4192.5], [4208.0, 4118.642857142858], [4192.0, 4390.0], [4176.0, 4234.75], [4544.0, 4235.0], [4560.0, 4142.0], [4512.0, 3861.3333333333335], [4352.0, 3850.0], [4464.0, 4219.0], [4656.0, 4310.5], [4768.0, 4175.0], [4816.0, 4169.0], [4800.0, 4178.875], [4640.0, 4313.5], [4720.0, 4273.6], [4688.0, 4905.5], [4672.0, 4305.0], [4976.0, 5340.0], [4960.0, 4144.0], [4944.0, 4154.0], [4273.0, 4196.0], [4305.0, 4129.6], [4177.0, 4199.0], [4513.0, 3633.0], [4561.0, 3797.0], [4529.0, 3976.6666666666665], [4545.0, 4143.0], [4401.0, 4328.857142857143], [4433.0, 3613.0], [4417.0, 3703.0], [4833.0, 4172.0], [4817.0, 4172.0], [4785.0, 4171.0], [4625.0, 4491.0], [4641.0, 4306.0], [4657.0, 4309.0], [4705.0, 4593.0], [4993.0, 4779.0], [4977.0, 5338.0], [2065.0, 16.0], [2161.0, 107.0], [2145.0, 66.0], [2073.0, 29.0], [2057.0, 23.0], [2049.0, 22.0], [2129.0, 56.0], [2113.0, 40.0], [2097.0, 34.0], [2089.0, 36.0], [2081.0, 22.0], [2241.0, 90.0], [2217.0, 137.75], [2185.0, 121.5], [2425.0, 213.0], [2417.0, 198.33333333333334], [2385.0, 196.0], [2377.0, 249.66666666666666], [2369.0, 232.8], [2329.0, 229.33333333333331], [2305.0, 207.10526315789474], [2521.0, 258.0], [2513.0, 235.5], [2481.0, 206.0], [2449.0, 219.5], [2441.0, 217.0], [2641.0, 5027.0], [2633.0, 4850.0], [2625.0, 4614.0], [2617.0, 4742.0], [2601.0, 4576.5], [2809.0, 4735.0], [2801.0, 4695.0], [2777.0, 390.0], [2737.0, 403.0], [2905.0, 1507.3243243243242], [2897.0, 4844.0], [2969.0, 4545.5], [3025.0, 408.5], [3009.0, 4622.0], [3001.0, 4614.0], [3145.0, 4420.333333333333], [3193.0, 4509.166666666667], [3081.0, 3792.166666666667], [3113.0, 4362.5], [3153.0, 4597.666666666667], [3273.0, 4532.0], [3305.0, 324.0], [3281.0, 4320.8], [3209.0, 4006.0], [3217.0, 2455.5], [3225.0, 252.0], [3233.0, 2410.0], [3289.0, 270.5], [3393.0, 3978.0], [3409.0, 3716.7999999999997], [3433.0, 296.0], [3353.0, 299.0], [3329.0, 4522.0], [3377.0, 282.0], [3369.0, 4528.0], [3417.0, 3975.0], [3553.0, 3963.0], [3513.0, 4249.75], [3505.0, 4165.0], [3537.0, 2140.5], [3529.0, 2386.0], [3649.0, 315.0], [3665.0, 326.0], [3689.0, 360.0], [3641.0, 309.5], [3633.0, 332.0], [3625.0, 375.0], [3617.0, 256.0], [3673.0, 380.0], [3817.0, 956.0], [3721.0, 404.0], [3729.0, 350.0], [3737.0, 311.3333333333333], [3761.0, 958.0], [3753.0, 754.3333333333334], [3905.0, 959.5], [3913.0, 924.0], [3953.0, 3037.25], [3937.0, 857.0], [3857.0, 890.0], [3849.0, 935.2], [3881.0, 331.0], [4073.0, 3814.0], [4081.0, 3942.5], [4033.0, 3998.5], [4049.0, 2519.0], [4057.0, 3100.5], [4065.0, 4229.0], [3993.0, 2584.0], [4025.0, 2518.0], [4017.0, 2516.0], [4009.0, 4064.6666666666665], [4001.0, 2564.0], [4258.0, 4200.0], [4226.0, 4192.0], [4274.0, 3862.0], [4322.0, 4197.0], [4306.0, 4114.111111111111], [4194.0, 4065.25], [4178.0, 4127.0], [4402.0, 4219.222222222222], [4562.0, 3782.0], [4498.0, 4252.0], [4530.0, 4325.0], [4418.0, 4185.5], [4834.0, 4347.0], [4914.0, 4149.0], [4978.0, 5339.0], [4291.0, 4361.0], [4195.0, 4199.0], [4179.0, 4094.5], [4563.0, 3598.0], [4499.0, 4162.5], [4515.0, 4092.8], [4467.0, 4029.75], [4435.0, 3665.0], [4419.0, 4173.0], [4819.0, 4181.0], [4787.0, 4169.0], [4627.0, 4316.0], [4675.0, 4305.0], [4979.0, 5338.0], [4963.0, 4151.0], [4931.0, 4350.166666666667], [1085.0, 607.0], [1073.0, 730.2857142857143], [1065.0, 757.3333333333334], [1061.0, 614.0], [1049.0, 1018.0], [1037.0, 824.0], [1029.0, 1020.0], [1149.0, 749.6666666666666], [1145.0, 591.5], [1141.0, 737.3333333333334], [1137.0, 1015.0], [1121.0, 821.0], [1097.0, 711.25], [1165.0, 601.0], [1213.0, 576.0], [1209.0, 575.5], [1161.0, 751.8333333333334], [1153.0, 601.0], [1197.0, 810.0], [1193.0, 1037.0], [1181.0, 586.0], [1177.0, 587.0], [1173.0, 884.0], [1169.0, 588.0], [1217.0, 614.0], [1277.0, 1032.0], [1273.0, 1031.0], [1269.0, 1020.0], [1245.0, 1030.0], [1241.0, 736.0], [1237.0, 738.6666666666666], [1233.0, 687.0], [1261.0, 983.4444444444446], [1249.0, 1022.0], [1289.0, 1046.0], [1313.0, 1027.5], [1305.0, 1025.5], [1301.0, 1029.5], [1401.0, 1101.0], [1381.0, 1039.5], [1393.0, 932.75], [1349.0, 1026.3333333333333], [1345.0, 1029.0], [1389.0, 1140.0], [1377.0, 1029.2], [1421.0, 1092.0], [1469.0, 1084.5], [1461.0, 1100.0], [1457.0, 1086.0], [1417.0, 1074.0], [1409.0, 1085.0], [1437.0, 1098.6666666666667], [1425.0, 1096.0], [1445.0, 1098.6666666666667], [1521.0, 1120.6], [1477.0, 1082.0], [1509.0, 1101.0], [1493.0, 1083.0], [1489.0, 1086.0], [1597.0, 1240.0], [1589.0, 1241.0], [1545.0, 1243.0], [1573.0, 1240.0], [1569.0, 1241.0], [1561.0, 1240.625], [1613.0, 1238.0], [1653.0, 1334.0], [1609.0, 1238.0], [1605.0, 1237.0], [1601.0, 1239.0], [1637.0, 1325.0], [1625.0, 1304.0], [1621.0, 1268.5], [1713.0, 1369.0], [1725.0, 1369.6666666666667], [1677.0, 1349.3333333333333], [1665.0, 1346.0], [1705.0, 1363.0], [1693.0, 1355.0], [1685.0, 1353.3333333333333], [1781.0, 2.0], [1777.0, 10.0], [1773.0, 27.0], [1757.0, 1390.0], [1733.0, 1371.0], [1729.0, 1373.0], [1753.0, 1387.6666666666665], [1805.0, 39.0], [1801.0, 37.0], [1793.0, 29.0], [1833.0, 54.666666666666664], [1909.0, 99.0], [1913.0, 101.25], [1869.0, 75.33333333333333], [1861.0, 65.0], [1857.0, 65.5], [1901.0, 95.66666666666667], [1873.0, 78.0], [1977.0, 3.0], [1981.0, 3.5], [1973.0, 11.0], [1965.0, 6.0], [1957.0, 18.5], [1997.0, 6.0], [2041.0, 14.5], [2037.0, 15.0], [2033.0, 18.0], [1993.0, 5.0], [1989.0, 5.0], [1985.0, 7.0], [2013.0, 10.0], [2009.0, 13.5], [2005.0, 15.333333333333334], [2029.0, 26.0], [2058.0, 24.0], [2162.0, 64.0], [2146.0, 42.0], [2074.0, 21.0], [2050.0, 22.0], [2106.0, 35.75], [2098.0, 35.0], [2090.0, 32.0], [2082.0, 30.0], [2226.0, 133.5], [2218.0, 101.0], [2202.0, 136.0], [2194.0, 51.0], [2186.0, 75.0], [2418.0, 246.0], [2410.0, 211.75], [2330.0, 158.0], [2378.0, 275.0], [2370.0, 234.29629629629628], [2514.0, 236.0], [2442.0, 212.0], [2474.0, 218.0], [2450.0, 219.0], [2626.0, 4772.555555555556], [2634.0, 4847.0], [2618.0, 4850.4], [2610.0, 4668.333333333333], [2594.0, 4868.0], [2810.0, 4713.5], [2802.0, 4847.0], [2794.0, 4846.0], [2786.0, 4738.0], [2898.0, 4852.0], [2874.0, 2647.5], [2826.0, 4845.0], [3050.0, 4608.0], [3058.0, 2311.5], [2970.0, 4133.541666666667], [2962.0, 2800.666666666667], [2954.0, 4672.0], [3034.0, 386.0], [3018.0, 4291.0], [3010.0, 4625.0], [3002.0, 4626.0], [2994.0, 4623.0], [3194.0, 4437.0], [3082.0, 3389.25], [3074.0, 4284.6], [3130.0, 4066.0], [3114.0, 4075.0], [3146.0, 4601.0], [3322.0, 337.0], [3282.0, 329.0], [3306.0, 362.0], [3250.0, 4526.0], [3218.0, 335.0], [3242.0, 343.5], [3234.0, 3998.0], [3394.0, 247.0], [3434.0, 2144.5], [3410.0, 1523.6666666666667], [3554.0, 3979.5], [3578.0, 3972.0], [3474.0, 3983.0], [3466.0, 2372.0], [3698.0, 380.8333333333333], [3650.0, 316.0], [3666.0, 245.0], [3674.0, 306.5], [3690.0, 384.0], [3682.0, 348.3333333333333], [3586.0, 420.5], [3610.0, 329.5], [3642.0, 321.0], [3634.0, 315.0], [3626.0, 373.0], [3618.0, 322.0], [3730.0, 365.0], [3818.0, 989.0], [3714.0, 870.0], [3762.0, 912.7142857142858], [3754.0, 412.0], [3954.0, 2635.0], [3906.0, 921.3333333333334], [3938.0, 884.6], [3842.0, 1042.0], [3858.0, 1095.7499999999998], [3866.0, 1042.5], [3874.0, 1042.0], [3930.0, 873.25], [4034.0, 2511.0], [4082.0, 4220.0], [4042.0, 3189.2], [4050.0, 3743.0], [4066.0, 2540.0], [4026.0, 2496.5], [4002.0, 4452.0], [4324.0, 4188.0], [4196.0, 4190.0], [4180.0, 3649.0], [4516.0, 4150.0], [4532.0, 4152.0], [4564.0, 4151.0], [4356.0, 4193.0], [4820.0, 4171.0], [4756.0, 4189.666666666667], [4772.0, 4175.0], [4708.0, 4257.666666666667], [4676.0, 4306.0], [4916.0, 4156.5], [4980.0, 4122.0], [4948.0, 4149.166666666666], [4932.0, 4149.333333333333], [4341.0, 4196.0], [4261.0, 4008.5], [4325.0, 4132.916666666666], [4197.0, 3956.5], [4181.0, 4200.666666666667], [4581.0, 4265.714285714286], [4517.0, 4190.0], [4565.0, 4148.0], [4549.0, 4143.0], [4357.0, 4181.0], [4469.0, 3992.5], [4421.0, 4175.25], [4821.0, 4171.0], [4757.0, 4187.666666666667], [4613.0, 4411.5], [4629.0, 4308.0], [4661.0, 4308.5], [4725.0, 4259.2], [4901.0, 4461.25], [4997.0, 4774.5], [4917.0, 4146.0], [4965.0, 4146.666666666667], [2075.0, 30.0], [2123.0, 41.0], [2163.0, 38.0], [2155.0, 80.0], [2067.0, 26.0], [2051.0, 23.0], [2107.0, 40.0], [2099.0, 36.0], [2091.0, 33.0], [2131.0, 56.0], [2115.0, 39.5], [2267.0, 179.8], [2259.0, 164.75], [2251.0, 136.66666666666666], [2243.0, 105.5], [2227.0, 115.85714285714286], [2419.0, 238.1], [2411.0, 245.5], [2507.0, 128.25], [2515.0, 234.0], [2499.0, 218.75], [2443.0, 210.40000000000003], [2491.0, 218.0], [2483.0, 219.0], [2675.0, 250.0], [2627.0, 4712.75], [2619.0, 5023.0], [2611.0, 4576.5], [2603.0, 4667.75], [2595.0, 4314.5], [2803.0, 4842.0], [2787.0, 4852.0], [2755.0, 490.0], [2739.0, 439.5], [2779.0, 234.0], [2899.0, 4485.0], [2883.0, 478.0], [2875.0, 4844.5], [2851.0, 2621.0], [2835.0, 4570.5], [3051.0, 3982.5], [3059.0, 4607.0], [3043.0, 4616.0], [2963.0, 4760.5], [2955.0, 4159.0], [3027.0, 1078.1666666666667], [3011.0, 4617.0], [3003.0, 4613.0], [2995.0, 4459.666666666667], [3139.0, 3408.25], [3171.0, 4596.5], [3083.0, 4603.0], [3131.0, 4059.5], [3307.0, 4359.666666666667], [3323.0, 2959.333333333333], [3211.0, 304.0], [3219.0, 4537.0], [3227.0, 237.5], [3243.0, 3987.0], [3235.0, 3988.0], [3291.0, 293.5], [3395.0, 4519.0], [3403.0, 4517.0], [3427.0, 4247.0], [3371.0, 4032.0], [3419.0, 3187.75], [3555.0, 4515.0], [3523.0, 4514.0], [3515.0, 4238.0], [3467.0, 3204.0], [3459.0, 4125.285714285715], [3475.0, 3320.0], [3499.0, 4514.0], [3539.0, 2395.5], [3611.0, 283.0], [3651.0, 232.0], [3659.0, 366.3333333333333], [3667.0, 389.0], [3587.0, 267.0], [3643.0, 249.0], [3635.0, 327.0], [3627.0, 458.0], [3675.0, 361.0], [3739.0, 335.0], [3835.0, 901.0], [3819.0, 944.6666666666667], [3771.0, 957.0], [3939.0, 2603.0], [3955.0, 4337.0], [3963.0, 2628.2500000000005], [3907.0, 2654.5], [3947.0, 2600.0], [3867.0, 1125.0], [3851.0, 866.8571428571429], [3843.0, 899.0], [3899.0, 296.0], [3883.0, 329.0], [3875.0, 1761.25], [4075.0, 4125.5], [4043.0, 2520.0], [4035.0, 4239.0], [4059.0, 3373.5], [4067.0, 3682.0], [3987.0, 2442.7272727272725], [3995.0, 2586.0], [4011.0, 3395.5], [4003.0, 4425.0], [4230.0, 3669.0], [4246.0, 3795.0], [4198.0, 4152.124999999999], [4182.0, 4170.142857142857], [4566.0, 3616.0], [4502.0, 4059.0], [4518.0, 4187.363636363636], [4582.0, 4143.0], [4390.0, 4358.0], [4406.0, 4012.25], [4470.0, 3926.75], [4422.0, 4185.333333333333], [4758.0, 4187.714285714285], [4806.0, 4171.0], [4614.0, 4319.0], [4630.0, 4317.333333333333], [4662.0, 4308.0], [4982.0, 4123.5], [4902.0, 4159.0], [4966.0, 4328.0], [4950.0, 4165.666666666667], [4934.0, 4148.5], [4327.0, 4110.571428571428], [4343.0, 3965.6666666666665], [4231.0, 3829.0], [4247.0, 4276.5], [4263.0, 4024.5], [4183.0, 4195.0], [4583.0, 4310.0], [4359.0, 4182.0], [4471.0, 4244.0], [4439.0, 4247.0], [4423.0, 4296.666666666667], [4807.0, 4194.0], [4615.0, 4308.0], [4631.0, 4321.0], [4647.0, 4306.5], [4663.0, 4309.5], [4711.0, 4256.0], [4935.0, 4150.0], [537.0, 1019.0], [533.0, 900.5], [531.0, 850.0], [529.0, 1012.0], [525.0, 1015.0], [523.0, 760.0], [521.0, 1025.0], [515.0, 752.0], [513.0, 1130.5], [573.0, 1022.0], [567.0, 763.0], [565.0, 860.5], [563.0, 904.0], [561.0, 715.0], [559.0, 685.0], [555.0, 1018.0], [547.0, 1012.0], [605.0, 1013.0], [599.0, 1023.0], [597.0, 806.6666666666666], [593.0, 1013.5], [591.0, 1012.0], [583.0, 1019.0], [577.0, 688.0], [637.0, 706.0], [633.0, 699.0], [631.0, 717.5], [629.0, 691.0], [625.0, 782.5], [621.0, 694.6666666666666], [611.0, 822.0], [645.0, 694.0], [669.0, 695.0], [667.0, 703.5], [663.0, 859.0], [661.0, 1017.0], [655.0, 858.5], [651.0, 1018.5], [643.0, 852.0], [641.0, 1022.0], [703.0, 823.6666666666666], [699.0, 863.0], [697.0, 711.0], [691.0, 708.3333333333334], [683.0, 726.0], [681.0, 918.0], [673.0, 683.0], [735.0, 913.3333333333334], [719.0, 1019.0], [715.0, 1021.0], [713.0, 712.0], [709.0, 1026.0], [707.0, 789.0], [767.0, 666.5], [765.0, 940.25], [761.0, 857.0], [759.0, 801.0], [755.0, 671.5], [751.0, 693.0], [747.0, 912.3333333333334], [739.0, 695.5], [799.0, 1017.0], [795.0, 909.8333333333334], [793.0, 680.0], [791.0, 681.0], [785.0, 682.0], [831.0, 849.5], [819.0, 677.0], [817.0, 679.0], [815.0, 677.0], [811.0, 910.5], [861.0, 684.5], [859.0, 753.75], [855.0, 878.2], [839.0, 856.5], [837.0, 848.0], [891.0, 1005.0], [887.0, 840.6666666666666], [881.0, 936.25], [877.0, 840.5], [875.0, 663.0], [915.0, 1028.0], [905.0, 669.5], [955.0, 854.0], [953.0, 657.0], [947.0, 652.0], [943.0, 696.5], [933.0, 908.6666666666666], [929.0, 778.3333333333334], [991.0, 1025.0], [989.0, 1024.0], [987.0, 950.2], [981.0, 958.6], [965.0, 650.3333333333334], [1021.0, 617.5], [1019.0, 754.6666666666666], [1017.0, 1029.0], [1013.0, 729.0], [1009.0, 737.2857142857143], [1007.0, 630.0], [999.0, 1033.0], [1074.0, 609.0], [1066.0, 610.0], [1062.0, 1028.0], [1058.0, 622.0], [1054.0, 624.75], [1046.0, 830.0], [1042.0, 576.0], [1030.0, 618.0], [1146.0, 616.0], [1138.0, 856.8], [1130.0, 1033.0], [1126.0, 754.0], [1122.0, 601.0], [1110.0, 602.0], [1102.0, 820.5], [1206.0, 695.0], [1202.0, 577.0], [1198.0, 577.0], [1194.0, 887.5], [1174.0, 816.5], [1162.0, 1026.0], [1266.0, 1023.0], [1270.0, 1027.0], [1278.0, 1022.0], [1222.0, 612.0], [1234.0, 587.3333333333334], [1342.0, 1019.0], [1294.0, 1030.0], [1314.0, 1024.0], [1306.0, 1033.0], [1302.0, 1023.0], [1290.0, 1033.0], [1282.0, 1025.75], [1354.0, 1033.0], [1346.0, 1027.0], [1386.0, 1066.5], [1382.0, 1018.0], [1362.0, 957.8333333333334], [1462.0, 1089.75], [1470.0, 1108.0], [1410.0, 1103.3333333333333], [1454.0, 1084.0], [1446.0, 1079.0], [1434.0, 1077.5], [1430.0, 1073.6666666666667], [1426.0, 1076.5], [1530.0, 1243.0], [1534.0, 1244.0], [1526.0, 1083.0], [1502.0, 1085.5], [1482.0, 1085.0], [1478.0, 1058.0], [1490.0, 1090.0], [1550.0, 1242.75], [1598.0, 1237.0], [1546.0, 1241.0], [1542.0, 1243.0], [1558.0, 1241.0], [1574.0, 1240.0], [1570.0, 1241.0], [1654.0, 1336.0], [1634.0, 1324.0], [1610.0, 1238.0], [1606.0, 1239.0], [1602.0, 1239.0], [1642.0, 1329.5], [1626.0, 1304.0], [1618.0, 1237.0], [1722.0, 1369.5], [1726.0, 1374.0], [1718.0, 1369.3333333333333], [1710.0, 1366.0], [1702.0, 1364.5], [1694.0, 1357.6666666666667], [1666.0, 1346.0], [1670.0, 1349.0], [1686.0, 1355.0], [1742.0, 1372.0], [1766.0, 1391.0], [1786.0, 5.5], [1790.0, 29.5], [1762.0, 1392.0], [1734.0, 1375.0], [1758.0, 1388.0], [1754.0, 1381.0], [1750.0, 1382.0], [1746.0, 1383.0], [1770.0, 1038.0], [1846.0, 67.0], [1854.0, 63.5], [1842.0, 57.0], [1818.0, 41.0], [1794.0, 28.0], [1798.0, 31.0], [1806.0, 32.0], [1810.0, 38.5], [1830.0, 53.0], [1906.0, 95.66666666666667], [1866.0, 72.75], [1902.0, 97.0], [1898.0, 94.66666666666667], [1894.0, 93.33333333333333], [1890.0, 88.75], [1886.0, 84.33333333333333], [1882.0, 82.0], [1982.0, 4.0], [1974.0, 7.0], [1970.0, 6.5], [1934.0, 74.85714285714286], [1954.0, 39.0], [2034.0, 19.0], [2042.0, 16.0], [2046.0, 20.0], [2018.0, 16.0], [2014.0, 13.0], [1986.0, 5.0], [1990.0, 2.0], [1994.0, 9.0], [1998.0, 8.0], [2006.0, 12.0], [2002.0, 8.5], [2030.0, 14.0], [2026.0, 18.0], [2022.0, 15.5], [2052.0, 23.0], [2156.0, 92.5], [2068.0, 20.0], [2060.0, 24.0], [2108.0, 52.0], [2100.0, 35.0], [2092.0, 33.0], [2084.0, 17.5], [2140.0, 92.75], [2132.0, 57.0], [2116.0, 40.0], [2284.0, 213.2], [2228.0, 158.0], [2204.0, 126.5], [2188.0, 94.0], [2428.0, 213.0], [2380.0, 208.5], [2372.0, 237.0], [2516.0, 234.0], [2492.0, 217.66666666666666], [2484.0, 216.33333333333334], [2476.0, 220.5], [2460.0, 216.83333333333334], [2628.0, 4578.0], [2644.0, 3104.666666666667], [2612.0, 4492.6], [2604.0, 4622.0], [2596.0, 4293.0], [2804.0, 4773.0], [2796.0, 4302.0], [2756.0, 437.3333333333333], [2900.0, 4115.0], [2868.0, 450.0], [2836.0, 4843.75], [3052.0, 4475.25], [3060.0, 4062.0], [3044.0, 4263.0], [3004.0, 4090.0], [2996.0, 4619.0], [3036.0, 901.7499999999999], [3012.0, 4074.0], [3172.0, 4606.0], [3140.0, 4597.0], [3300.0, 2433.0], [3268.0, 4325.4], [3284.0, 2155.0], [3308.0, 4520.0], [3212.0, 339.0], [3220.0, 4532.0], [3228.0, 4016.0], [3244.0, 4531.0], [3356.0, 2388.0], [3452.0, 4297.0], [3428.0, 3971.0], [3388.0, 4519.0], [3372.0, 278.0], [3404.0, 4254.0], [3580.0, 2155.1428571428573], [3524.0, 4329.333333333333], [3556.0, 4329.333333333333], [3508.0, 3970.0], [3492.0, 241.0], [3548.0, 4105.25], [3540.0, 275.0], [3700.0, 344.5], [3652.0, 316.0], [3660.0, 431.0], [3668.0, 321.0], [3708.0, 345.6666666666667], [3692.0, 392.0], [3684.0, 322.0], [3644.0, 249.0], [3604.0, 460.0], [3612.0, 458.0], [3636.0, 344.0], [3628.0, 457.0], [3620.0, 318.5], [3836.0, 654.0], [3724.0, 507.6666666666667], [3772.0, 957.0], [3764.0, 913.5], [3756.0, 967.0], [3948.0, 2603.0], [3964.0, 2623.0], [3908.0, 2612.0], [3924.0, 928.0], [3884.0, 343.0], [3844.0, 779.5], [3852.0, 1052.0], [3868.0, 966.0], [3876.0, 1127.0], [4036.0, 2494.0], [4076.0, 4220.0], [4044.0, 2521.0], [4052.0, 2504.5], [4060.0, 3744.0], [4084.0, 4216.5], [4068.0, 4221.0], [4020.0, 2509.0], [4004.0, 3916.0], [4232.0, 3647.0], [4248.0, 4187.5], [4264.0, 4277.0], [4200.0, 4140.5], [4184.0, 4256.333333333333], [4168.0, 4372.0], [4568.0, 3905.5], [4408.0, 4182.5], [4472.0, 4280.0], [4424.0, 4349.0], [4744.0, 4188.0], [4808.0, 4185.5], [4760.0, 4182.0], [4792.0, 4346.0], [4616.0, 4311.0], [4632.0, 4443.444444444445], [4648.0, 4310.0], [4664.0, 4310.0], [4696.0, 4321.375], [5000.0, 4766.666666666667], [4904.0, 4159.0], [4233.0, 4088.3333333333335], [4345.0, 4361.0], [4249.0, 4198.0], [4281.0, 4197.0], [4201.0, 4199.0], [4185.0, 4238.2], [4169.0, 4198.0], [4409.0, 4349.0], [4553.0, 4221.142857142857], [4585.0, 4138.0], [4489.0, 3682.0], [4393.0, 4187.5], [4361.0, 4186.0], [4473.0, 4149.0], [4425.0, 4175.0], [4745.0, 4186.111111111111], [4761.0, 4190.0], [4809.0, 4170.0], [4649.0, 4308.5], [4681.0, 4303.0], [4985.0, 4126.333333333333], [4969.0, 5351.0], [2069.0, 28.0], [2077.0, 29.5], [2117.0, 40.0], [2149.0, 66.66666666666667], [2061.0, 31.0], [2053.0, 23.0], [2141.0, 67.0], [2133.0, 62.0], [2109.0, 40.0], [2101.0, 48.0], [2093.0, 32.0], [2261.0, 182.0], [2245.0, 161.0], [2213.0, 136.0], [2429.0, 159.0], [2413.0, 239.66666666666669], [2381.0, 227.0], [2365.0, 278.0], [2461.0, 220.66666666666669], [2509.0, 98.5], [2477.0, 216.0], [2445.0, 217.0], [2629.0, 4745.857142857143], [2637.0, 2656.5], [2621.0, 4251.0], [2613.0, 4845.0], [2605.0, 4851.0], [2597.0, 4657.666666666667], [2805.0, 4661.333333333333], [2789.0, 4346.428571428572], [2845.0, 435.0], [2965.0, 4132.0], [3053.0, 4047.0], [3045.0, 2369.0], [3013.0, 4051.0], [3005.0, 4094.0], [2997.0, 4140.0], [2957.0, 4216.0], [2949.0, 2472.5], [3173.0, 4089.0], [3189.0, 4323.5], [3141.0, 4120.0], [3101.0, 4348.5], [3077.0, 4602.0], [3269.0, 4393.75], [3277.0, 4536.0], [3301.0, 2966.0], [3205.0, 3277.909090909091], [3213.0, 349.0], [3221.0, 4532.0], [3245.0, 3988.0], [3237.0, 4276.5], [3285.0, 4532.0], [3357.0, 4255.0], [3429.0, 3974.0], [3397.0, 2752.0], [3405.0, 3972.0], [3349.0, 1702.3333333333335], [3341.0, 4519.0], [3381.0, 1670.0], [3373.0, 3094.666666666667], [3421.0, 287.0], [3469.0, 220.0], [3565.0, 4251.0], [3525.0, 4425.0], [3501.0, 3983.0], [3493.0, 4163.333333333333], [3685.0, 322.0], [3709.0, 513.3333333333334], [3653.0, 312.0], [3661.0, 421.0], [3669.0, 388.0], [3605.0, 393.0], [3613.0, 1027.0], [3645.0, 244.0], [3637.0, 328.0], [3629.0, 455.0], [3621.0, 340.0], [3725.0, 382.0], [3821.0, 974.6666666666666], [3837.0, 813.875], [3717.0, 694.5], [3765.0, 329.0], [3749.0, 407.0], [3949.0, 2602.0], [3869.0, 964.0], [3853.0, 658.5], [3845.0, 733.6666666666666], [3901.0, 447.0], [3925.0, 878.8333333333333], [4069.0, 4222.0], [4077.0, 3690.0], [4037.0, 3709.0], [4045.0, 2520.0], [4053.0, 1005.0], [4061.0, 4230.0], [3989.0, 3159.333333333333], [3997.0, 2594.0], [4029.0, 2550.0], [4021.0, 2516.0], [4013.0, 2516.0], [4005.0, 2523.0], [4234.0, 4197.0], [4330.0, 3859.0], [4250.0, 3951.3333333333335], [4266.0, 4068.3333333333335], [4282.0, 4010.0], [4346.0, 4014.5], [4202.0, 4283.0], [4458.0, 4163.0], [4442.0, 4331.0], [4426.0, 4176.0], [4762.0, 4244.0], [4778.0, 4172.333333333333], [4826.0, 4177.0], [4634.0, 4309.0], [4650.0, 4329.0], [4730.0, 4268.2], [4986.0, 4812.0], [4938.0, 4149.0], [4331.0, 4368.0], [4235.0, 4085.0], [4251.0, 3860.0], [4267.0, 4200.0], [4203.0, 4249.666666666667], [4171.0, 4239.75], [4491.0, 3980.0], [4603.0, 4315.0], [4539.0, 4164.0], [4587.0, 4253.0], [4555.0, 4230.0], [4443.0, 3974.0], [4427.0, 4160.0], [4987.0, 4806.0], [4955.0, 4146.6], [1083.0, 714.75], [1079.0, 749.6666666666666], [1075.0, 606.0], [1059.0, 838.5], [1039.0, 656.0], [1035.0, 817.5], [1031.0, 1021.0], [1143.0, 591.5], [1131.0, 822.0], [1127.0, 1028.0], [1123.0, 1040.5], [1119.0, 602.0], [1091.0, 921.5], [1115.0, 904.3333333333334], [1111.0, 603.5], [1099.0, 824.0], [1095.0, 606.0], [1215.0, 800.0], [1195.0, 614.0], [1191.0, 1027.0], [1183.0, 860.4], [1175.0, 1032.0], [1167.0, 590.0], [1159.0, 1021.0], [1271.0, 1023.0], [1275.0, 1034.0], [1227.0, 574.0], [1219.0, 593.5], [1243.0, 796.0], [1239.0, 573.0], [1263.0, 1030.0], [1251.0, 843.0], [1335.0, 1024.6666666666665], [1339.0, 1026.3333333333333], [1283.0, 1033.0], [1323.0, 1023.0], [1319.0, 1026.0], [1311.0, 960.0], [1299.0, 1031.6666666666667], [1407.0, 1144.0], [1403.0, 1034.0], [1371.0, 878.6666666666666], [1363.0, 1021.0], [1387.0, 1093.0], [1383.0, 882.3333333333334], [1467.0, 1067.0], [1471.0, 1072.0], [1419.0, 1075.0], [1415.0, 1026.0], [1439.0, 1066.0], [1427.0, 1080.0], [1455.0, 1105.0], [1447.0, 1072.0], [1443.0, 1078.5], [1503.0, 1051.0], [1535.0, 1242.0], [1515.0, 1089.0], [1511.0, 1082.75], [1495.0, 1074.5], [1491.0, 1082.6666666666667], [1587.0, 1239.0], [1571.0, 1239.0], [1543.0, 1243.0], [1539.0, 1243.25], [1583.0, 1240.5], [1579.0, 1239.0], [1567.0, 1241.0], [1655.0, 1337.6666666666667], [1663.0, 1341.0], [1615.0, 1237.0], [1611.0, 1237.0], [1647.0, 1333.6666666666667], [1639.0, 1327.0], [1631.0, 1320.0], [1623.0, 1302.5], [1619.0, 1237.0], [1679.0, 1352.0], [1695.0, 1358.0], [1715.0, 1370.0], [1671.0, 1346.5], [1667.0, 1347.0], [1699.0, 1359.6666666666667], [1691.0, 1354.0], [1687.0, 1357.0], [1783.0, 3.5], [1779.0, 2.5], [1775.0, 2.5], [1771.0, 463.0], [1763.0, 1393.5], [1743.0, 1379.4285714285716], [1735.0, 1376.0], [1731.0, 1375.0], [1847.0, 70.0], [1851.0, 67.33333333333333], [1843.0, 64.0], [1839.0, 54.0], [1827.0, 51.0], [1819.0, 43.0], [1815.0, 41.666666666666664], [1811.0, 37.0], [1871.0, 78.0], [1919.0, 104.5], [1859.0, 71.0], [1903.0, 98.0], [1895.0, 90.0], [1883.0, 84.5], [1879.0, 81.5], [1979.0, 4.0], [1983.0, 7.0], [1975.0, 3.0], [1971.0, 9.0], [1927.0, 105.14285714285715], [1943.0, 50.75], [1939.0, 65.2], [2043.0, 21.0], [2035.0, 14.0], [2047.0, 21.0], [2019.0, 16.0], [2027.0, 13.0], [2023.0, 16.0], [2039.0, 15.0], [1999.0, 7.0], [1995.0, 8.0], [1987.0, 8.0], [2015.0, 11.0], [2031.0, 20.0], [2054.0, 23.0], [2110.0, 42.0], [2158.0, 91.5], [2078.0, 30.0], [2062.0, 22.0], [2134.0, 64.0], [2126.0, 56.333333333333336], [2102.0, 36.0], [2094.0, 24.0], [2086.0, 30.0], [2206.0, 120.0], [2270.0, 175.0], [2262.0, 166.0], [2254.0, 177.0], [2182.0, 99.21052631578947], [2374.0, 237.0], [2430.0, 223.0], [2422.0, 237.0], [2390.0, 224.2], [2382.0, 224.0], [2502.0, 220.0], [2518.0, 234.0], [2510.0, 307.0], [2494.0, 216.0], [2486.0, 217.25], [2462.0, 221.0], [2638.0, 485.0], [2630.0, 4595.285714285714], [2622.0, 4597.142857142857], [2614.0, 4423.0], [2798.0, 4130.0], [2806.0, 4541.714285714285], [2790.0, 4131.0], [2774.0, 405.0], [2734.0, 400.0], [2846.0, 441.0], [2894.0, 424.0], [2886.0, 450.0], [2878.0, 437.0], [2870.0, 436.0], [2838.0, 2350.5], [2958.0, 4674.5], [3038.0, 4624.0], [3022.0, 368.0], [3006.0, 4617.0], [2998.0, 4795.0], [2990.0, 4412.909090909091], [3086.0, 4607.333333333333], [3174.0, 4605.0], [3102.0, 4070.0], [3078.0, 4346.0], [3126.0, 4061.0], [3142.0, 4601.0], [3310.0, 4357.0], [3318.0, 2169.5], [3326.0, 2693.6], [3278.0, 4152.0], [3206.0, 4025.0], [3214.0, 241.0], [3230.0, 2100.0], [3246.0, 4538.0], [3238.0, 347.0], [3294.0, 1553.6666666666665], [3286.0, 4536.0], [3438.0, 3473.0], [3358.0, 3107.3333333333335], [3334.0, 2562.4285714285716], [3374.0, 4521.5], [3366.0, 3970.0], [3406.0, 4248.0], [3582.0, 2025.8749999999998], [3534.0, 1115.2], [3510.0, 4512.0], [3502.0, 4379.75], [3542.0, 4506.0], [3702.0, 381.0], [3710.0, 887.0], [3654.0, 356.0], [3614.0, 268.0], [3638.0, 310.0], [3630.0, 454.0], [3774.0, 839.1666666666666], [3838.0, 928.0], [3742.0, 347.3333333333333], [3750.0, 651.0], [3910.0, 896.5], [3950.0, 2596.0], [3926.0, 917.0], [3846.0, 960.0], [3854.0, 886.0], [3870.0, 1047.5], [3878.0, 2201.0], [4070.0, 4301.0], [4086.0, 4022.5], [4046.0, 2520.0], [4078.0, 3742.0], [3990.0, 2595.0], [3974.0, 876.5], [4014.0, 3158.5], [4006.0, 2522.0], [4252.0, 4188.0], [4236.0, 4140.857142857143], [4268.0, 4240.5], [4204.0, 4200.0], [4188.0, 4031.5], [4172.0, 4366.5], [4284.0, 4363.5], [4572.0, 3882.5], [4588.0, 4310.0], [4604.0, 4307.0], [4492.0, 4001.5], [4364.0, 4270.5], [4460.0, 3669.0], [4444.0, 4336.0], [4428.0, 4335.0], [4828.0, 4207.833333333334], [4652.0, 4313.0], [4732.0, 4252.0], [4700.0, 4319.0], [4908.0, 4167.0], [4924.0, 4147.0], [4988.0, 4805.0], [4237.0, 4154.375], [4285.0, 4194.0], [4349.0, 4096.75], [4205.0, 4018.6666666666665], [4189.0, 4002.5], [4541.0, 3955.8], [4605.0, 4311.25], [4573.0, 4144.0], [4397.0, 4362.0], [4445.0, 4077.5], [4429.0, 4343.0], [4765.0, 4641.333333333333], [4781.0, 4186.0], [4829.0, 4168.0], [4813.0, 4173.0], [4733.0, 4217.0], [4653.0, 4311.833333333334], [4701.0, 4317.0], [4909.0, 4268.424242424241], [4893.0, 4162.0], [4989.0, 4803.0], [4973.0, 4190.833333333334], [4941.0, 4156.5], [2079.0, 30.0], [2151.0, 68.0], [2063.0, 23.0], [2055.0, 25.0], [2111.0, 42.0], [2095.0, 34.0], [2087.0, 34.0], [2143.0, 67.0], [2127.0, 55.0], [2119.0, 41.0], [2303.0, 254.0], [2255.0, 168.0], [2279.0, 182.11111111111111], [2263.0, 168.0], [2183.0, 108.0], [2199.0, 73.4], [2191.0, 148.33333333333334], [2207.0, 86.0], [2423.0, 231.0], [2415.0, 234.0], [2367.0, 225.5], [2519.0, 304.0], [2511.0, 296.0], [2503.0, 190.0], [2495.0, 218.0], [2487.0, 220.0], [2639.0, 501.0], [2631.0, 4850.0], [2615.0, 5026.0], [2607.0, 4303.0], [2599.0, 4641.375], [2799.0, 4847.0], [2791.0, 4487.333333333333], [2759.0, 443.5], [2735.0, 455.0], [2751.0, 394.0], [2895.0, 451.0], [2879.0, 474.0], [2863.0, 3211.0], [2823.0, 4284.0], [2959.0, 2980.3333333333335], [2967.0, 4310.5], [2951.0, 4669.5], [3039.0, 4660.0], [3007.0, 4623.0], [2999.0, 4617.0], [2991.0, 4505.0], [3103.0, 4079.0], [3175.0, 4135.000000000001], [3095.0, 3771.3333333333335], [3127.0, 4071.5], [3167.0, 4056.0], [3151.0, 2520.0], [3319.0, 1720.6666666666665], [3311.0, 314.0], [3271.0, 4349.0], [3279.0, 4528.5], [3247.0, 4535.0], [3215.0, 3994.0], [3231.0, 4535.0], [3287.0, 316.0], [3431.0, 2379.5], [3447.0, 3337.1111111111113], [3359.0, 4100.2], [3351.0, 2606.2], [3383.0, 2916.0], [3583.0, 321.0], [3535.0, 352.0], [3487.0, 4508.0], [3479.0, 2251.0], [3503.0, 3970.0], [3495.0, 3967.0], [3543.0, 3963.0], [3527.0, 2378.5], [3703.0, 329.0], [3663.0, 341.5], [3711.0, 406.0], [3655.0, 351.0], [3687.0, 306.0], [3647.0, 316.0], [3615.0, 382.0], [3639.0, 448.0], [3631.0, 436.0], [3623.0, 358.5], [3679.0, 359.0], [3671.0, 370.0], [3727.0, 891.0], [3839.0, 970.25], [3719.0, 349.0], [3735.0, 280.0], [3743.0, 896.0], [3767.0, 972.0], [3751.0, 904.5], [3911.0, 924.0], [3871.0, 1123.0], [3855.0, 758.0], [3847.0, 889.0], [3903.0, 869.7142857142857], [3927.0, 920.6666666666666], [4055.0, 2492.0], [4047.0, 4242.0], [4063.0, 4054.0], [4031.0, 3420.5], [3975.0, 4306.0], [3999.0, 2566.5], [4015.0, 2517.0], [4350.0, 4108.0], [4334.0, 4021.0], [4238.0, 4195.0], [4254.0, 4093.3333333333335], [4222.0, 4023.5], [4190.0, 4364.0], [4286.0, 4321.125], [4606.0, 4310.0], [4542.0, 4080.4615384615386], [4574.0, 3596.0], [4478.0, 4239.25], [4366.0, 4367.0], [4398.0, 4130.833333333334], [4462.0, 4343.0], [4446.0, 4196.2], [4830.0, 4170.0], [4814.0, 4171.5], [4750.0, 4188.0], [4782.0, 4175.8], [4670.0, 4304.5], [4702.0, 4295.0], [4686.0, 4299.333333333334], [4990.0, 4789.0], [4926.0, 4147.0], [4974.0, 5039.0], [4942.0, 4151.25], [4351.0, 4213.666666666667], [4303.0, 3828.0], [4207.0, 4112.5], [4191.0, 4127.333333333333], [4175.0, 4285.0], [4559.0, 3983.0], [4607.0, 4309.5], [4511.0, 4033.75], [4399.0, 4265.5], [4367.0, 4185.0], [4815.0, 4180.0], [4831.0, 4187.0], [4767.0, 4174.0], [4783.0, 4173.0], [4671.0, 4303.0], [4719.0, 4256.0], [4991.0, 4787.0], [4911.0, 4152.5], [4959.0, 4145.75]], "isOverall": false, "label": "/user/get", "isController": false}, {"data": [[2511.2407999999937, 1955.8216000000052]], "isOverall": false, "label": "/user/get-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.740304414E12, "maxY": 3.69204021E8, "series": [{"data": [[1.740304449E12, 138915.0], [1.740304429E12, 222.0], [1.740304414E12, 130615.0], [1.740304415E12, 61021.0], [1.74030442E12, 2431019.0], [1.740304419E12, 1147702.0], [1.740304442E12, 2522.0], [1.740304417E12, 674038.0], [1.740304418E12, 3234396.0], [1.740304448E12, 2987357.0], [1.740304447E12, 1352800.0], [1.740304444E12, 499356.0], [1.740304422E12, 6750913.0], [1.740304443E12, 7566.0], [1.740304424E12, 3.69204021E8], [1.740304445E12, 25220.0], [1.740304423E12, 1.34745848E8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.740304449E12, 691145.0], [1.740304429E12, 805.0], [1.740304414E12, 2412.0], [1.740304415E12, 1206.0], [1.74030442E12, 30954.0], [1.740304419E12, 0.0], [1.740304442E12, 403.0], [1.740304417E12, 6432.0], [1.740304418E12, 2010.0], [1.740304448E12, 22165.0], [1.740304447E12, 2418.0], [1.740304444E12, 79794.0], [1.740304422E12, 82425.0], [1.740304443E12, 1209.0], [1.740304424E12, 363938.0], [1.740304445E12, 4030.0], [1.740304423E12, 1249470.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.740304449E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.740304414E12, "maxY": 37900.531096563005, "series": [{"data": [[1.740304429E12, 19850.0], [1.740304414E12, 4609.0], [1.740304415E12, 5940.0], [1.74030442E12, 10971.38961038961], [1.740304419E12, 8828.423580786026], [1.740304442E12, 33165.0], [1.740304417E12, 6992.923076923078], [1.740304418E12, 7971.387622149834], [1.740304448E12, 37900.531096563005], [1.740304447E12, 36508.66245487368], [1.740304444E12, 34385.752525252545], [1.740304422E12, 12315.652631578943], [1.740304443E12, 34092.333333333336], [1.740304424E12, 14103.120320855616], [1.740304445E12, 33368.5], [1.740304423E12, 13292.64150943397]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[1.740304442E12, 4.0], [1.740304449E12, 952.5994169096213], [1.740304429E12, 5.0], [1.740304448E12, 1357.7818181818184], [1.740304447E12, 44.0], [1.740304444E12, 57.21717171717174], [1.740304422E12, 4783.866666666668], [1.740304443E12, 6.666666666666667], [1.740304424E12, 140.86226415094353], [1.740304445E12, 4.3], [1.740304423E12, 3208.695052716945]], "isOverall": false, "label": "/user/get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.740304449E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.740304414E12, "maxY": 19850.0, "series": [{"data": [[1.740304429E12, 19850.0], [1.740304414E12, 4608.833333333333], [1.740304415E12, 5940.0], [1.74030442E12, 10679.415584415578], [1.740304419E12, 0.0], [1.740304442E12, 0.0], [1.740304417E12, 3046.0769230769233], [1.740304418E12, 36.92182410423454], [1.740304448E12, 0.0], [1.740304447E12, 0.0], [1.740304444E12, 0.0], [1.740304422E12, 11896.389473684212], [1.740304443E12, 0.0], [1.740304424E12, 11962.350267379692], [1.740304445E12, 0.0], [1.740304423E12, 11826.742138364783]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[1.740304442E12, 0.0], [1.740304449E12, 0.0], [1.740304429E12, 0.0], [1.740304448E12, 0.0], [1.740304447E12, 0.0], [1.740304444E12, 0.0], [1.740304422E12, 0.0], [1.740304443E12, 0.0], [1.740304424E12, 0.0], [1.740304445E12, 0.0], [1.740304423E12, 0.0]], "isOverall": false, "label": "/user/get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.740304449E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.740304414E12, "maxY": 7771.165309446258, "series": [{"data": [[1.740304429E12, 1967.0], [1.740304414E12, 173.83333333333334], [1.740304415E12, 167.0], [1.74030442E12, 711.5714285714283], [1.740304419E12, 7691.644104803491], [1.740304442E12, 2838.0], [1.740304417E12, 3818.9743589743593], [1.740304418E12, 7771.165309446258], [1.740304448E12, 7291.071194762685], [1.740304447E12, 5003.055956678703], [1.740304444E12, 4385.393939393937], [1.740304422E12, 1175.2368421052636], [1.740304443E12, 3965.0], [1.740304424E12, 1120.3101604278081], [1.740304445E12, 3330.6000000000004], [1.740304423E12, 1152.6163522012562]], "isOverall": false, "label": "/user/search", "isController": false}, {"data": [[1.740304442E12, 0.0], [1.740304449E12, 805.989504373178], [1.740304429E12, 0.0], [1.740304448E12, 4.2], [1.740304447E12, 2.8333333333333335], [1.740304444E12, 5.383838383838384], [1.740304422E12, 0.0], [1.740304443E12, 1.6666666666666665], [1.740304424E12, 0.0], [1.740304445E12, 1.4], [1.740304423E12, 459.9902676399029]], "isOverall": false, "label": "/user/get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.740304449E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.740304414E12, "maxY": 19850.0, "series": [{"data": [[1.740304449E12, 1612.0], [1.740304429E12, 19850.0], [1.740304414E12, 4652.0], [1.740304415E12, 5964.0], [1.74030442E12, 11189.0], [1.740304442E12, 4.0], [1.740304417E12, 8092.0], [1.740304418E12, 9215.0], [1.740304448E12, 1397.0], [1.740304447E12, 201.0], [1.740304444E12, 109.0], [1.740304422E12, 12946.0], [1.740304443E12, 8.0], [1.740304424E12, 14929.0], [1.740304445E12, 10.0], [1.740304423E12, 14331.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.740304449E12, 1524.0], [1.740304429E12, 19850.0], [1.740304414E12, 4652.0], [1.740304415E12, 5964.0], [1.74030442E12, 11173.2], [1.740304442E12, 4.0], [1.740304417E12, 8062.6], [1.740304418E12, 9215.0], [1.740304448E12, 1392.8], [1.740304447E12, 201.0], [1.740304444E12, 100.0], [1.740304422E12, 12888.6], [1.740304443E12, 8.0], [1.740304424E12, 14666.0], [1.740304445E12, 9.700000000000001], [1.740304423E12, 13579.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.740304449E12, 1600.84], [1.740304429E12, 19850.0], [1.740304414E12, 4652.0], [1.740304415E12, 5964.0], [1.74030442E12, 11189.0], [1.740304442E12, 4.0], [1.740304417E12, 8092.0], [1.740304418E12, 9215.0], [1.740304448E12, 1397.0], [1.740304447E12, 201.0], [1.740304444E12, 109.0], [1.740304422E12, 12936.82], [1.740304443E12, 8.0], [1.740304424E12, 14902.5], [1.740304445E12, 10.0], [1.740304423E12, 14272.97]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.740304449E12, 1541.0], [1.740304429E12, 19850.0], [1.740304414E12, 4652.0], [1.740304415E12, 5964.0], [1.74030442E12, 11185.2], [1.740304442E12, 4.0], [1.740304417E12, 8092.0], [1.740304418E12, 9215.0], [1.740304448E12, 1395.0], [1.740304447E12, 201.0], [1.740304444E12, 104.04999999999998], [1.740304422E12, 12915.4], [1.740304443E12, 8.0], [1.740304424E12, 14771.0], [1.740304445E12, 10.0], [1.740304423E12, 13875.199999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.740304449E12, 504.0], [1.740304429E12, 5.0], [1.740304414E12, 4568.0], [1.740304415E12, 5909.0], [1.74030442E12, 9912.0], [1.740304442E12, 4.0], [1.740304417E12, 7654.0], [1.740304418E12, 8649.0], [1.740304448E12, 463.0], [1.740304447E12, 2.0], [1.740304444E12, 3.0], [1.740304422E12, 4766.0], [1.740304443E12, 5.0], [1.740304424E12, 2.0], [1.740304445E12, 2.0], [1.740304423E12, 117.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.740304449E12, 1022.0], [1.740304429E12, 9927.5], [1.740304414E12, 4602.5], [1.740304415E12, 5947.0], [1.74030442E12, 11105.0], [1.740304442E12, 4.0], [1.740304417E12, 7961.0], [1.740304418E12, 9158.0], [1.740304448E12, 1378.0], [1.740304447E12, 8.5], [1.740304444E12, 57.0], [1.740304422E12, 12682.0], [1.740304443E12, 7.0], [1.740304424E12, 234.0], [1.740304445E12, 4.0], [1.740304423E12, 4194.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.740304449E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 2.0, "maxY": 37807.5, "series": [{"data": [[2.0, 5.0], [560.0, 8.5], [39.0, 7961.0], [3.0, 5947.0], [3102.0, 4194.5], [205.0, 12682.0], [904.0, 234.0], [1228.0, 9158.0], [77.0, 11105.0], [1277.0, 1378.0], [20.0, 4.0], [6.0, 4578.0], [396.0, 57.0], [1715.0, 1022.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 33165.0], [560.0, 36068.5], [39.0, 6224.0], [1228.0, 7896.0], [1277.0, 37807.5], [20.0, 33344.0], [6.0, 34110.0], [396.0, 34421.0], [458.0, 8556.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3102.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 12163.0, "series": [{"data": [[2.0, 0.0], [560.0, 0.0], [39.0, 7737.0], [3.0, 5947.0], [3102.0, 0.0], [205.0, 12163.0], [904.0, 0.0], [1228.0, 9158.0], [77.0, 11084.0], [1277.0, 0.0], [20.0, 0.0], [6.0, 4578.0], [396.0, 0.0], [1715.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [560.0, 0.0], [39.0, 0.0], [1228.0, 0.0], [1277.0, 0.0], [20.0, 0.0], [6.0, 0.0], [396.0, 0.0], [458.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3102.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.740304409E12, "maxY": 2314.0, "series": [{"data": [[1.740304409E12, 2314.0], [1.74030441E12, 727.0], [1.740304429E12, 1.0], [1.740304411E12, 1959.0], [1.74030442E12, 77.0], [1.740304419E12, 1160.0], [1.740304442E12, 1.0], [1.740304417E12, 31.0], [1.740304418E12, 543.0], [1.740304448E12, 1222.0], [1.740304447E12, 554.0], [1.740304444E12, 198.0], [1.740304422E12, 190.0], [1.740304443E12, 3.0], [1.740304424E12, 375.0], [1.740304445E12, 10.0], [1.740304423E12, 635.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.740304448E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.740304414E12, "maxY": 2466.0, "series": [{"data": [[1.74030442E12, 77.0], [1.740304417E12, 16.0], [1.740304429E12, 1.0], [1.740304418E12, 5.0], [1.740304414E12, 6.0], [1.740304415E12, 3.0], [1.740304422E12, 190.0], [1.740304424E12, 374.0], [1.740304423E12, 636.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.740304419E12, 5.0], [1.740304417E12, 23.0], [1.740304418E12, 275.0]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.740304442E12, 1.0], [1.740304449E12, 1715.0], [1.740304429E12, 1.0], [1.740304448E12, 55.0], [1.740304447E12, 6.0], [1.740304444E12, 198.0], [1.740304422E12, 15.0], [1.740304443E12, 3.0], [1.740304424E12, 530.0], [1.740304445E12, 10.0], [1.740304423E12, 2466.0]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.740304419E12, 453.0], [1.740304442E12, 1.0], [1.740304418E12, 948.0], [1.740304448E12, 1222.0], [1.740304447E12, 554.0], [1.740304444E12, 198.0], [1.740304443E12, 3.0], [1.740304445E12, 10.0]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.740304449E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.740304414E12, "maxY": 2466.0, "series": [{"data": [[1.74030442E12, 77.0], [1.740304417E12, 16.0], [1.740304429E12, 1.0], [1.740304418E12, 5.0], [1.740304414E12, 6.0], [1.740304415E12, 3.0], [1.740304422E12, 190.0], [1.740304424E12, 374.0], [1.740304423E12, 636.0]], "isOverall": false, "label": "/user/search-success", "isController": false}, {"data": [[1.740304419E12, 458.0], [1.740304442E12, 1.0], [1.740304417E12, 23.0], [1.740304418E12, 1223.0], [1.740304448E12, 1222.0], [1.740304447E12, 554.0], [1.740304444E12, 198.0], [1.740304443E12, 3.0], [1.740304445E12, 10.0]], "isOverall": false, "label": "/user/search-failure", "isController": false}, {"data": [[1.740304442E12, 1.0], [1.740304449E12, 1715.0], [1.740304429E12, 1.0], [1.740304448E12, 55.0], [1.740304447E12, 6.0], [1.740304444E12, 198.0], [1.740304422E12, 15.0], [1.740304443E12, 3.0], [1.740304424E12, 530.0], [1.740304445E12, 10.0], [1.740304423E12, 2466.0]], "isOverall": false, "label": "/user/get-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.740304449E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.740304414E12, "maxY": 3102.0, "series": [{"data": [[1.740304449E12, 1715.0], [1.740304429E12, 2.0], [1.740304414E12, 6.0], [1.740304415E12, 3.0], [1.74030442E12, 77.0], [1.740304442E12, 1.0], [1.740304417E12, 16.0], [1.740304418E12, 5.0], [1.740304448E12, 55.0], [1.740304447E12, 6.0], [1.740304444E12, 198.0], [1.740304422E12, 205.0], [1.740304443E12, 3.0], [1.740304424E12, 904.0], [1.740304445E12, 10.0], [1.740304423E12, 3102.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.740304419E12, 458.0], [1.740304442E12, 1.0], [1.740304417E12, 23.0], [1.740304418E12, 1223.0], [1.740304448E12, 1222.0], [1.740304447E12, 554.0], [1.740304444E12, 198.0], [1.740304443E12, 3.0], [1.740304445E12, 10.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.740304449E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

